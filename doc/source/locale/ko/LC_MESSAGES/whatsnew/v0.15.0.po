# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2014, the pandas development team
# This file is distributed under the same license as the pandas package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pandas 0.24.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-04-11 11:49+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../whatsnew/v0.15.0.rst:4
msgid "v0.15.0 (October 18, 2014)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:6
msgid "{{ header }}"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:9
msgid ""
"This is a major release from 0.14.1 and includes a small number of API "
"changes, several new features, enhancements, and performance improvements"
" along with a large number of bug fixes. We recommend that all users "
"upgrade to this version."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:15
msgid ""
"pandas >= 0.15.0 will no longer support compatibility with NumPy versions"
" < 1.7.0. If you want to use the latest versions of pandas, please "
"upgrade to NumPy >= 1.7.0 (:issue:`7711`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:19
msgid "Highlights include:"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:21
msgid ""
"The ``Categorical`` type was integrated as a first-class pandas type, see"
" :ref:`here <whatsnew_0150.cat>`"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:22
msgid ""
"New scalar type ``Timedelta``, and a new index type ``TimedeltaIndex``, "
"see :ref:`here <whatsnew_0150.timedeltaindex>`"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:23
msgid ""
"New datetimelike properties accessor ``.dt`` for Series, see "
":ref:`Datetimelike Properties <whatsnew_0150.dt>`"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:24
msgid ""
"New DataFrame default display for ``df.info()`` to include memory usage, "
"see :ref:`Memory Usage <whatsnew_0150.memory>`"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:25
msgid ""
"``read_csv`` will now by default ignore blank lines when parsing, see "
":ref:`here <whatsnew_0150.blanklines>`"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:26
msgid ""
"API change in using Indexes in set operations, see :ref:`here "
"<whatsnew_0150.index_set_ops>`"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:27
msgid ""
"Enhancements in the handling of timezones, see :ref:`here "
"<whatsnew_0150.tz>`"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:28
msgid ""
"A lot of improvements to the rolling and expanding moment functions, see "
":ref:`here <whatsnew_0150.roll>`"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:29
msgid ""
"Internal refactoring of the ``Index`` class to no longer sub-class "
"``ndarray``, see :ref:`Internal Refactoring <whatsnew_0150.refactoring>`"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:30
msgid ""
"dropping support for ``PyTables`` less than version 3.0.0, and "
"``numexpr`` less than version 2.1 (:issue:`7990`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:31
msgid ""
"Split indexing documentation into :ref:`Indexing and Selecting Data "
"<indexing>` and :ref:`MultiIndex / Advanced Indexing <advanced>`"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:32
msgid ""
"Split out string methods documentation into :ref:`Working with Text Data "
"<text>`"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:34
msgid ""
"Check the :ref:`API Changes <whatsnew_0150.api>` and :ref:`deprecations "
"<whatsnew_0150.deprecations>` before updating"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:36
msgid ":ref:`Other Enhancements <whatsnew_0150.enhancements>`"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:38
msgid ":ref:`Performance Improvements <whatsnew_0150.performance>`"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:40
msgid ":ref:`Bug Fixes <whatsnew_0150.bug_fixes>`"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:44
msgid ""
"In 0.15.0 ``Index`` has internally been refactored to no longer sub-class"
" ``ndarray`` but instead subclass ``PandasObject``, similarly to the rest"
" of the pandas objects. This change allows very easy sub-classing and "
"creation of new index types. This should be a transparent change with "
"only very limited API implications (See the :ref:`Internal Refactoring "
"<whatsnew_0150.refactoring>`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:50
msgid ""
"The refactoring in :class:`~pandas.Categorical` changed the two argument "
"constructor from \"codes/labels and levels\" to \"values and levels (now "
"called 'categories')\". This can lead to subtle bugs. If you use "
":class:`~pandas.Categorical` directly, please audit your code before "
"updating to this pandas version and change it to use the "
":meth:`~pandas.Categorical.from_codes` constructor. See more on "
"``Categorical`` :ref:`here <whatsnew_0150.cat>`"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:57
msgid "New features"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:62
msgid "Categoricals in Series/DataFrame"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:64
msgid ""
":class:`~pandas.Categorical` can now be included in `Series` and "
"`DataFrames` and gained new methods to manipulate. Thanks to Jan Schulz "
"for much of this API/implementation. (:issue:`3943`, :issue:`5313`, "
":issue:`5314`, :issue:`7444`, :issue:`7839`, :issue:`7848`, "
":issue:`7864`, :issue:`7914`, :issue:`7768`, :issue:`8006`, "
":issue:`3678`, :issue:`8075`, :issue:`8076`, :issue:`8143`, "
":issue:`8453`, :issue:`8518`)."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:69
msgid ""
"For full docs, see the :ref:`categorical introduction <categorical>` and "
"the :ref:`API documentation <api.arrays.categorical>`."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:91
msgid ""
"``pandas.core.group_agg`` and ``pandas.core.factor_agg`` were removed. As"
" an alternative, construct a dataframe and use "
"``df.groupby(<group>).agg(<func>)``."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:94
msgid ""
"Supplying \"codes/labels and levels\" to the :class:`~pandas.Categorical`"
" constructor is not supported anymore. Supplying two arguments to the "
"constructor is now interpreted as \"values and levels (now called "
"'categories')\". Please change your code to use the "
":meth:`~pandas.Categorical.from_codes` constructor."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:99
msgid ""
"The ``Categorical.labels`` attribute was renamed to ``Categorical.codes``"
" and is read only. If you want to manipulate codes, please use one of the"
" :ref:`API methods on Categoricals <api.arrays.categorical>`."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:103
msgid ""
"The ``Categorical.levels`` attribute is renamed to "
"``Categorical.categories``."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:109
msgid "TimedeltaIndex/Scalar"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:111
msgid ""
"We introduce a new scalar type ``Timedelta``, which is a subclass of "
"``datetime.timedelta``, and behaves in a similar manner, but allows "
"compatibility with ``np.timedelta64`` types as well as a host of custom "
"representation, parsing, and attributes. This type is very similar to how"
" ``Timestamp`` works for ``datetimes``. It is a nice-API box for the "
"type. See the :ref:`docs <timedeltas.timedeltas>`. (:issue:`3009`, "
":issue:`4533`, :issue:`8209`, :issue:`8187`, :issue:`8190`, "
":issue:`7869`, :issue:`7661`, :issue:`8345`, :issue:`8471`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:118
msgid ""
"``Timedelta`` scalars (and ``TimedeltaIndex``) component fields are *not "
"the same* as the component fields on a ``datetime.timedelta`` object. For"
" example, ``.seconds`` on a ``datetime.timedelta`` object returns the "
"total number of seconds combined between ``hours``, ``minutes`` and "
"``seconds``. In contrast, the pandas ``Timedelta`` breaks out hours, "
"minutes, microseconds and nanoseconds separately."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:136
msgid ""
"**Note**: this is no longer true starting from v0.16.0, where full "
"compatibility with ``datetime.timedelta`` is introduced. See the "
":ref:`0.16.0 whatsnew entry <whatsnew_0160.api_breaking.timedelta>`"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:142
msgid ""
"Prior to 0.15.0 ``pd.to_timedelta`` would return a ``Series`` for list-"
"like/Series input, and a ``np.timedelta64`` for scalar input. It will now"
" return a ``TimedeltaIndex`` for list-like input, ``Series`` for Series "
"input, and ``Timedelta`` for scalar input."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:145
msgid ""
"The arguments to ``pd.to_timedelta`` are now "
"``(arg,unit='ns',box=True,coerce=False)``, previously were "
"``(arg,box=True,unit='ns')`` as these are more logical."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:147
msgid "Construct a scalar"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:162
msgid "Access fields for a ``Timedelta``"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:171
msgid "Construct a ``TimedeltaIndex``"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:184
msgid "Constructing a ``TimedeltaIndex`` with a regular range"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:191
msgid "You can now use a ``TimedeltaIndex`` as the index of a pandas object"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:199
msgid "You can select with partial string selections"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:206
msgid ""
"Finally, the combination of ``TimedeltaIndex`` with ``DatetimeIndex`` "
"allow certain combination operations that are ``NaT`` preserving:"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:218
msgid ""
"iteration of a ``Series`` e.g. ``list(Series(...))`` of "
"``timedelta64[ns]`` would prior to v0.15.0 return ``np.timedelta64`` for "
"each element. These will now be wrapped in ``Timedelta``."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:224
msgid "Memory Usage"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:226
msgid ""
"Implemented methods to find memory usage of a DataFrame. See the "
":ref:`FAQ <df-memory-usage>` for more. (:issue:`6852`)."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:228
msgid ""
"A new display option ``display.memory_usage`` (see :ref:`options`) sets "
"the default behavior of the ``memory_usage`` argument in the "
"``df.info()`` method. By default ``display.memory_usage`` is ``True``."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:241
msgid ""
"Additionally :meth:`~pandas.DataFrame.memory_usage` is an available "
"method for a dataframe object which returns the memory usage of each "
"column."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:251
msgid ".dt accessor"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:253
msgid ""
"``Series`` has gained an accessor to succinctly return datetime like "
"properties for the *values* of the Series, if its a datetime/period like "
"Series. (:issue:`7207`) This will return a Series, indexed like the "
"existing Series. See the :ref:`docs <basics.dt_accessors>`"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:266
msgid "This enables nice expressions like this:"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:272
msgid "You can easily produce tz aware transformations:"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:280
msgid "You can also chain these types of operations:"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:286
msgid "The ``.dt`` accessor works for period and timedelta dtypes."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:309
msgid "Timezone handling improvements"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:311
msgid ""
"``tz_localize(None)`` for tz-aware ``Timestamp`` and ``DatetimeIndex`` "
"now removes timezone holding local time, previously this resulted in "
"``Exception`` or ``TypeError`` (:issue:`7812`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:326
msgid ""
"``tz_localize`` now accepts the ``ambiguous`` keyword which allows for "
"passing an array of bools indicating whether the date belongs in DST or "
"not, 'NaT' for setting transition times to NaT, 'infer' for inferring DST"
"/non-DST, and 'raise' (default) for an ``AmbiguousTimeError`` to be "
"raised. See :ref:`the docs<timeseries.timezone_ambiguous>` for more "
"details (:issue:`7943`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:330
msgid ""
"``DataFrame.tz_localize`` and ``DataFrame.tz_convert`` now accepts an "
"optional ``level`` argument for localizing a specific level of a "
"MultiIndex (:issue:`7846`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:333
msgid ""
"``Timestamp.tz_localize`` and ``Timestamp.tz_convert`` now raise "
"``TypeError`` in error cases, rather than ``Exception`` (:issue:`8025`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:335
msgid ""
"a timeseries/index localized to UTC when inserted into a Series/DataFrame"
" will preserve the UTC timezone (rather than being a naive "
"``datetime64[ns]``) as ``object`` dtype (:issue:`8411`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:337
msgid ""
"``Timestamp.__repr__`` displays ``dateutil.tz.tzoffset`` info "
"(:issue:`7907`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:343
msgid "Rolling/Expanding Moments improvements"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:345
msgid ""
":func:`rolling_min`, :func:`rolling_max`, :func:`rolling_cov`, and "
":func:`rolling_corr` now return objects with all ``NaN`` when ``len(arg) "
"< min_periods <= window`` rather than raising. (This makes all rolling "
"functions consistent in this behavior). (:issue:`7766`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:349
msgid "Prior to 0.15.0"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:360 ../../whatsnew/v0.15.0.rst:428
msgid "New behavior"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:372
msgid ""
":func:`rolling_max`, :func:`rolling_min`, :func:`rolling_sum`, "
":func:`rolling_mean`, :func:`rolling_median`, :func:`rolling_std`, "
":func:`rolling_var`, :func:`rolling_skew`, :func:`rolling_kurt`, "
":func:`rolling_quantile`, :func:`rolling_cov`, :func:`rolling_corr`, "
":func:`rolling_corr_pairwise`, :func:`rolling_window`, and "
":func:`rolling_apply` with ``center=True`` previously would return a "
"result of the same structure as the input ``arg`` with ``NaN`` in the "
"final ``(window-1)/2`` entries."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:378
msgid ""
"Now the final ``(window-1)/2`` entries of the result are calculated as if"
" the input ``arg`` were followed by ``(window-1)/2`` ``NaN`` values (or "
"with shrinking windows, in the case of :func:`rolling_apply`). "
"(:issue:`7925`, :issue:`8269`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:382
msgid "Prior behavior (note final value is ``NaN``):"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:394
msgid "New behavior (note final value is ``5 = sum([2, 3, NaN])``):"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:407
msgid ""
":func:`rolling_window` now normalizes the weights properly in rolling "
"mean mode (`mean=True`) so that the calculated weighted means (e.g. "
"'triang', 'gaussian') are distributed about the same means as those "
"calculated without weighting (i.e. 'boxcar'). See :ref:`the note on "
"normalization <stats.moments.normalization>` for further details. "
"(:issue:`7618`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:415
msgid "Behavior prior to 0.15.0:"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:441
msgid ""
"Removed ``center`` argument from all :func:`expanding_ <expanding_apply>`"
" functions (see :ref:`list <api.functions_expanding>`), as the results "
"produced when ``center=True`` did not make much sense. (:issue:`7925`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:444
msgid ""
"Added optional ``ddof`` argument to :func:`expanding_cov` and "
":func:`rolling_cov`. The default value of ``1`` is backwards-compatible. "
"(:issue:`8279`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:447
msgid ""
"Documented the ``ddof`` argument to :func:`expanding_var`, "
":func:`expanding_std`, :func:`rolling_var`, and :func:`rolling_std`. "
"These functions' support of a ``ddof`` argument (with a default value of "
"``1``) was previously undocumented. (:issue:`8064`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:451
msgid ""
":func:`ewma`, :func:`ewmstd`, :func:`ewmvol`, :func:`ewmvar`, "
":func:`ewmcov`, and :func:`ewmcorr` now interpret ``min_periods`` in the "
"same manner that the :func:`rolling_*()` and :func:`expanding_*()` "
"functions do: a given result entry will be ``NaN`` if the (expanding, in "
"this case) window does not contain at least ``min_periods`` values. The "
"previous behavior was to set to ``NaN`` the ``min_periods`` entries "
"starting with the first non- ``NaN`` value. (:issue:`7977`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:457
msgid ""
"Prior behavior (note values start at index ``2``, which is "
"``min_periods`` after index ``0`` (the index of the first non-empty "
"value)):"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:476
msgid ""
"New behavior (note values start at index ``4``, the location of the 2nd "
"(since ``min_periods=2``) non-empty value):"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:490
msgid ""
":func:`ewmstd`, :func:`ewmvol`, :func:`ewmvar`, :func:`ewmcov`, and "
":func:`ewmcorr` now have an optional ``adjust`` argument, just like "
":func:`ewma` does, affecting how the weights are calculated. The default "
"value of ``adjust`` is ``True``, which is backwards-compatible. See "
":ref:`Exponentially weighted moment functions "
"<stats.moments.exponentially_weighted>` for details. (:issue:`7911`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:496
msgid ""
":func:`ewma`, :func:`ewmstd`, :func:`ewmvol`, :func:`ewmvar`, "
":func:`ewmcov`, and :func:`ewmcorr` now have an optional ``ignore_na`` "
"argument. When ``ignore_na=False`` (the default), missing values are "
"taken into account in the weights calculation. When ``ignore_na=True`` "
"(which reproduces the pre-0.15.0 behavior), missing values are ignored in"
" the weights calculation. (:issue:`7543`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:529
msgid ""
"By default (``ignore_na=False``) the :func:`ewm*()` functions' weights "
"calculation in the presence of missing values is different than in "
"pre-0.15.0 versions. To reproduce the pre-0.15.0 calculation of weights "
"in the presence of missing values one must specify explicitly "
"``ignore_na=True``."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:534
msgid ""
"Bug in :func:`expanding_cov`, :func:`expanding_corr`, "
":func:`rolling_cov`, :func:`rolling_cor`, :func:`ewmcov`, and "
":func:`ewmcorr` returning results with columns sorted by name and "
"producing an error for non-unique columns; now handles non-unique columns"
" and returns columns in original order (except for the case of two "
"DataFrames with ``pairwise=False``, where behavior is unchanged) "
"(:issue:`7542`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:538
msgid ""
"Bug in :func:`rolling_count` and :func:`expanding_*()` functions "
"unnecessarily producing error message for zero-length data "
"(:issue:`8056`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:539
msgid ""
"Bug in :func:`rolling_apply` and :func:`expanding_apply` interpreting "
"``min_periods=0`` as ``min_periods=1`` (:issue:`8080`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:540
msgid ""
"Bug in :func:`expanding_std` and :func:`expanding_var` for a single value"
" producing a confusing error message (:issue:`7900`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:541
msgid ""
"Bug in :func:`rolling_std` and :func:`rolling_var` for a single value "
"producing ``0`` rather than ``NaN`` (:issue:`7900`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:543
msgid ""
"Bug in :func:`ewmstd`, :func:`ewmvol`, :func:`ewmvar`, and :func:`ewmcov`"
" calculation of de-biasing factors when ``bias=False`` (the default). "
"Previously an incorrect constant factor was used, based on "
"``adjust=True``, ``ignore_na=True``, and an infinite number of "
"observations. Now a different factor is used for each entry, based on the"
" actual weights (analogous to the usual ``N/(N-1)`` factor). In "
"particular, for a single point a value of ``NaN`` is returned when "
"``bias=False``, whereas previously a value of (approximately) ``0`` was "
"returned."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:552
msgid ""
"For example, consider the following pre-0.15.0 results for ``ewmvar(..., "
"bias=False)``, and the corresponding debiasing factors:"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:577
msgid ""
"Note that entry ``0`` is approximately 0, and the debiasing factors are a"
" constant 1.25. By comparison, the following 0.15.0 results have a "
"``NaN`` for entry ``0``, and the debiasing factors are decreasing "
"(towards 1.25):"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:599
msgid ""
"See :ref:`Exponentially weighted moment functions "
"<stats.moments.exponentially_weighted>` for details. (:issue:`7912`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:605
msgid "Improvements in the sql io module"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:607
msgid ""
"Added support for a ``chunksize`` parameter to ``to_sql`` function. This "
"allows DataFrame to be written in chunks and avoid packet-size overflow "
"errors (:issue:`8062`)."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:608
msgid ""
"Added support for a ``chunksize`` parameter to ``read_sql`` function. "
"Specifying this argument will return an iterator through chunks of the "
"query result (:issue:`2908`)."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:609
msgid ""
"Added support for writing ``datetime.date`` and ``datetime.time`` object "
"columns with ``to_sql`` (:issue:`6932`)."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:610
msgid ""
"Added support for specifying a ``schema`` to read from/write to with "
"``read_sql_table`` and ``to_sql`` (:issue:`7441`, :issue:`7952`). For "
"example:"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:618
msgid "Added support for writing ``NaN`` values with ``to_sql`` (:issue:`2754`)."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:619
msgid ""
"Added support for writing datetime64 columns with ``to_sql`` for all "
"database flavors (:issue:`7103`)."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:625
msgid "Backwards incompatible API changes"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:630
msgid "Breaking changes"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:632
msgid ""
"API changes related to ``Categorical`` (see :ref:`here "
"<whatsnew_0150.cat>` for more details):"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:635
msgid ""
"The ``Categorical`` constructor with two arguments changed from "
"\"codes/labels and levels\" to \"values and levels (now called "
"'categories')\". This can lead to subtle bugs. If you use "
":class:`~pandas.Categorical` directly, please audit your code by changing"
" it to use the :meth:`~pandas.Categorical.from_codes` constructor."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:641
msgid "An old function call like (prior to 0.15.0):"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:647
msgid "will have to adapted to the following to keep the same behaviour:"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:656
msgid ""
"API changes related to the introduction of the ``Timedelta`` scalar (see "
":ref:`above <whatsnew_0150.timedeltaindex>` for more details):"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:659
msgid ""
"Prior to 0.15.0 :func:`to_timedelta` would return a ``Series`` for list-"
"like/Series input, and a ``np.timedelta64`` for scalar input. It will now"
" return a ``TimedeltaIndex`` for list-like input, ``Series`` for Series "
"input, and ``Timedelta`` for scalar input."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:663
msgid ""
"For API changes related to the rolling and expanding functions, see "
"detailed overview :ref:`above <whatsnew_0150.roll>`."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:665
msgid "Other notable API changes:"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:667
msgid ""
"Consistency when indexing with ``.loc`` and a list-like indexer when no "
"values are found."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:674
msgid "In prior versions there was a difference in these two constructs:"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:676
msgid ""
"``df.loc[[3]]`` would return a frame reindexed by 3 (with all ``np.nan`` "
"values)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:677
msgid "``df.loc[[3],:]`` would raise ``KeyError``."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:679
msgid ""
"Both will now raise a ``KeyError``. The rule is that *at least 1* indexer"
" must be found when using a list-like and ``.loc`` (:issue:`7999`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:681
msgid "Furthermore in prior versions these were also different:"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:683
msgid "``df.loc[[1,3]]`` would return a frame reindexed by [1,3]"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:684
msgid "``df.loc[[1,3],:]`` would raise ``KeyError``."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:686
msgid "Both will now return a frame reindex by [1,3]. E.g."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:702
msgid "This can also be seen in multi-axis indexing with a ``Panel``."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:712
msgid "The following would raise ``KeyError`` prior to 0.15.0:"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:723
msgid ""
"Furthermore, ``.loc`` will raise If no values are found in a MultiIndex "
"with a list-like indexer:"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:739
msgid ""
"Assigning values to ``None`` now considers the dtype when choosing an "
"'empty' value (:issue:`7941`)."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:741
msgid ""
"Previously, assigning to ``None`` in numeric containers changed the dtype"
" to object (or errored, depending on the call). It now uses ``NaN``:"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:751
msgid "``NaT`` is now used similarly for datetime containers."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:753
msgid ""
"For object containers, we now preserve ``None`` values (previously these "
"were converted to ``NaN`` values)."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:762
msgid ""
"To insert a ``NaN``, you must explicitly use ``np.nan``. See the "
":ref:`docs <missing.inserting>`."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:764
msgid ""
"In prior versions, updating a pandas object inplace would not reflect in "
"other python references to this object. (:issue:`8511`, :issue:`5104`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:772
msgid "Behavior prior to v0.15.0"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:794
msgid "This is now the correct behavior"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:806
msgid ""
"Made both the C-based and Python engines for `read_csv` and `read_table` "
"ignore empty lines in input as well as white space-filled lines, as long "
"as ``sep`` is not white space. This is an API change that can be "
"controlled by the keyword parameter ``skip_blank_lines``.  See :ref:`the "
"docs <io.skiplines>` (:issue:`4466`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:810
msgid ""
"A timeseries/index localized to UTC when inserted into a Series/DataFrame"
" will preserve the UTC timezone and inserted as ``object`` dtype rather "
"than being converted to a naive ``datetime64[ns]`` (:issue:`8411`)."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:813
msgid ""
"Bug in passing a ``DatetimeIndex`` with a timezone that was not being "
"retained in DataFrame construction from a dict (:issue:`7822`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:815
msgid ""
"In prior versions this would drop the timezone, now it retains the "
"timezone, but gives a column of ``object`` dtype:"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:826
msgid ""
"Previously this would have yielded a column of ``datetime64`` dtype, but "
"without timezone info."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:828
msgid ""
"The behaviour of assigning a column to an existing dataframe as `df['a'] "
"= i` remains unchanged (this already returned an  ``object`` column with "
"a timezone)."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:831
msgid ""
"When passing multiple levels to :meth:`~pandas.DataFrame.stack()`, it "
"will now raise a ``ValueError`` when the levels aren't all level names or"
" all level numbers (:issue:`7660`). See :ref:`Reshaping by stacking and "
"unstacking <reshaping.stack_multiple>`."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:835
msgid ""
"Raise a ``ValueError`` in ``df.to_hdf`` with 'fixed' format, if ``df`` "
"has non-unique columns as the resulting file will be broken "
"(:issue:`7761`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:837
msgid ""
"``SettingWithCopy`` raise/warnings (according to the option "
"``mode.chained_assignment``) will now be issued when setting a value on a"
" sliced mixed-dtype DataFrame using chained-assignment. (:issue:`7845`, "
":issue:`7950`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:852
msgid ""
"``merge``, ``DataFrame.merge``, and ``ordered_merge`` now return the same"
" type as the ``left`` argument (:issue:`7737`)."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:855
msgid ""
"Previously an enlargement with a mixed-dtype frame would act unlike "
"``.append`` which will preserve dtypes (related :issue:`2578`, "
":issue:`8176`):"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:869
msgid ""
"``Series.to_csv()`` now returns a string when ``path=None``, matching the"
" behaviour of ``DataFrame.to_csv()`` (:issue:`8215`)."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:871
msgid ""
"``read_hdf`` now raises ``IOError`` when a file that doesn't exist is "
"passed in. Previously, a new, empty file was created, and a ``KeyError`` "
"raised (:issue:`7715`)."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:873
msgid ""
"``DataFrame.info()`` now ends its output with a newline character "
"(:issue:`8114`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:874
msgid ""
"Concatenating no objects will now raise a ``ValueError`` rather than a "
"bare ``Exception``."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:875
msgid ""
"Merge errors will now be sub-classes of ``ValueError`` rather than raw "
"``Exception`` (:issue:`8501`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:876
msgid ""
"``DataFrame.plot`` and ``Series.plot`` keywords are now have consistent "
"orders (:issue:`8037`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:882
msgid "Internal Refactoring"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:884
msgid ""
"In 0.15.0 ``Index`` has internally been refactored to no longer sub-class"
" ``ndarray`` but instead subclass ``PandasObject``, similarly to the rest"
" of the pandas objects. This change allows very easy sub-classing and "
"creation of new index types. This should be a transparent change with "
"only very limited API implications (:issue:`5080`, :issue:`7439`, "
":issue:`7796`, :issue:`8024`, :issue:`8367`, :issue:`7997`, "
":issue:`8522`):"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:889
msgid ""
"you may need to unpickle pandas version < 0.15.0 pickles using "
"``pd.read_pickle`` rather than ``pickle.load``. See :ref:`pickle docs "
"<io.pickle>`"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:890
msgid ""
"when plotting with a ``PeriodIndex``, the matplotlib internal axes will "
"now be arrays of ``Period`` rather than a ``PeriodIndex`` (this is "
"similar to how a ``DatetimeIndex`` passes arrays of ``datetimes`` now)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:891
msgid ""
"MultiIndexes will now raise similarly to other pandas objects w.r.t. "
"truth testing, see :ref:`here <gotchas.truth>` (:issue:`7897`)."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:892
msgid ""
"When plotting a DatetimeIndex directly with matplotlib's `plot` function,"
" the axis labels will no longer be formatted as dates but as integers "
"(the internal representation of a ``datetime64``). **UPDATE** This is "
"fixed in 0.15.1, see :ref:`here <whatsnew_0151.datetime64_plotting>`."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:900
msgid "Deprecations"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:902
msgid ""
"The attributes ``Categorical`` ``labels`` and ``levels`` attributes are "
"deprecated and renamed to ``codes`` and ``categories``."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:904
msgid ""
"The ``outtype`` argument to ``pd.DataFrame.to_dict`` has been deprecated "
"in favor of ``orient``. (:issue:`7840`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:905
msgid ""
"The ``convert_dummies`` method has been deprecated in favor of "
"``get_dummies`` (:issue:`8140`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:907
msgid ""
"The ``infer_dst`` argument in ``tz_localize`` will be deprecated in favor"
" of ``ambiguous`` to allow for more flexibility in dealing with DST "
"transitions. Replace ``infer_dst=True`` with ``ambiguous='infer'`` for "
"the same behavior (:issue:`7943`). See :ref:`the "
"docs<timeseries.timezone_ambiguous>` for more details."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:911
msgid ""
"The top-level ``pd.value_range`` has been deprecated and can be replaced "
"by ``.describe()`` (:issue:`8481`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:915
msgid ""
"The ``Index`` set operations ``+`` and ``-`` were deprecated in order to "
"provide these for numeric type operations on certain index types. ``+`` "
"can be replaced by ``.union()`` or ``|``, and ``-`` by ``.difference()``."
" Further the method name ``Index.diff()`` is deprecated and can be "
"replaced by ``Index.difference()`` (:issue:`8226`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:933
msgid ""
"The ``infer_types`` argument to :func:`~pandas.read_html` now has no "
"effect and is deprecated (:issue:`7762`, :issue:`7032`)."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:940
msgid "Removal of prior version deprecations/changes"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:942
msgid "Remove ``DataFrame.delevel`` method in favor of ``DataFrame.reset_index``"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:949
msgid "Enhancements"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:951
msgid "Enhancements in the importing/exporting of Stata files:"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:953
msgid ""
"Added support for bool, uint8, uint16 and uint32 data types in "
"``to_stata`` (:issue:`7097`, :issue:`7365`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:954
msgid "Added conversion option when importing Stata files (:issue:`8527`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:955
msgid ""
"``DataFrame.to_stata`` and ``StataWriter`` check string length for "
"compatibility with limitations imposed in dta files where fixed-width "
"strings must contain 244 or fewer characters.  Attempting to write Stata "
"dta files with strings longer than 244 characters raises a "
"``ValueError``. (:issue:`7858`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:959
msgid ""
"``read_stata`` and ``StataReader`` can import missing data information "
"into a ``DataFrame`` by setting the argument ``convert_missing`` to "
"``True``. When using this options, missing values are returned as "
"``StataMissingValue`` objects and columns containing missing values have "
"``object`` data type. (:issue:`8045`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:964
msgid "Enhancements in the plotting functions:"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:966
msgid ""
"Added ``layout`` keyword to ``DataFrame.plot``. You can pass a tuple of "
"``(rows, columns)``, one of which can be ``-1`` to automatically infer "
"(:issue:`6667`, :issue:`8071`)."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:967
msgid ""
"Allow to pass multiple axes to ``DataFrame.plot``, ``hist`` and "
"``boxplot`` (:issue:`5353`, :issue:`6970`, :issue:`7069`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:968
msgid ""
"Added support for ``c``, ``colormap`` and ``colorbar`` arguments for "
"``DataFrame.plot`` with ``kind='scatter'`` (:issue:`7780`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:969
msgid ""
"Histogram from ``DataFrame.plot`` with ``kind='hist'`` (:issue:`7809`), "
"See :ref:`the docs<visualization.hist>`."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:970
msgid ""
"Boxplot from ``DataFrame.plot`` with ``kind='box'`` (:issue:`7998`), See "
":ref:`the docs<visualization.box>`."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:972
msgid "Other:"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:974
msgid ""
"``read_csv`` now has a keyword parameter ``float_precision`` which "
"specifies which floating-point converter the C engine should use during "
"parsing, see :ref:`here <io.float_precision>` (:issue:`8002`, "
":issue:`8044`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:976
msgid "Added ``searchsorted`` method to ``Series`` objects (:issue:`7447`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:978
msgid ""
":func:`describe` on mixed-types DataFrames is more flexible. Type-based "
"column filtering is now possible via the ``include``/``exclude`` "
"arguments. See the :ref:`docs <basics.describe>` (:issue:`8164`)."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:990
msgid "Requesting all columns is possible with the shorthand 'all'"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:996
msgid ""
"Without those arguments, ``describe`` will behave as before, including "
"only numerical columns or, if none are, only categorical columns. See "
"also the :ref:`docs <basics.describe>`"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:998
msgid ""
"Added ``split`` as an option to the ``orient`` argument in "
"``pd.DataFrame.to_dict``. (:issue:`7840`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1000
msgid ""
"The ``get_dummies`` method can now be used on DataFrames. By default only"
" categorical columns are encoded as 0's and 1's, while other columns are "
"left untouched."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1010
msgid ""
"``PeriodIndex`` supports ``resolution`` as the same as ``DatetimeIndex`` "
"(:issue:`7708`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1011
msgid ""
"``pandas.tseries.holiday`` has added support for additional holidays and "
"ways to observe holidays (:issue:`7070`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1012
msgid ""
"``pandas.tseries.holiday.Holiday`` now supports a list of offsets in "
"Python3 (:issue:`7070`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1013
msgid ""
"``pandas.tseries.holiday.Holiday`` now supports a days_of_week parameter "
"(:issue:`7070`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1014
msgid ""
"``GroupBy.nth()`` now supports selecting multiple nth values "
"(:issue:`7910`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1023
msgid ""
"``Period`` and ``PeriodIndex`` supports addition/subtraction with "
"``timedelta``-likes (:issue:`7966`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1025
msgid ""
"If ``Period`` freq is ``D``, ``H``, ``T``, ``S``, ``L``, ``U``, ``N``, "
"``Timedelta``-like can be added if the result can have same freq. "
"Otherwise, only the same ``offsets`` can be added."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1038
msgid ""
"Added experimental compatibility with ``openpyxl`` for versions >= 2.0. "
"The ``DataFrame.to_excel`` method ``engine`` keyword now recognizes "
"``openpyxl1`` and ``openpyxl2`` which will explicitly require openpyxl v1"
" and v2 respectively, failing if the requested version is not available. "
"The ``openpyxl`` engine is a now a meta-engine that automatically uses "
"whichever version of openpyxl is installed. (:issue:`7177`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1045
msgid ""
"``DataFrame.fillna`` can now accept a ``DataFrame`` as a fill value "
"(:issue:`8377`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1047
msgid ""
"Passing multiple levels to :meth:`~pandas.DataFrame.stack()` will now "
"work when multiple level numbers are passed (:issue:`7660`). See "
":ref:`Reshaping by stacking and unstacking <reshaping.stack_multiple>`."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1051
msgid ""
":func:`set_names`, :func:`set_labels`, and :func:`set_levels` methods now"
" take an optional ``level`` keyword argument to all modification of "
"specific level(s) of a MultiIndex. Additionally :func:`set_names` now "
"accepts a scalar string value when operating on an ``Index`` or on a "
"specific level of a ``MultiIndex`` (:issue:`7792`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1062
msgid ""
"``Index.isin`` now supports a ``level`` argument to specify which index "
"level to use for membership tests (:issue:`7892`, :issue:`7890`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1075
msgid ""
"``Index`` now supports ``duplicated`` and ``drop_duplicates``. "
"(:issue:`4060`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1084
msgid ""
"add ``copy=True`` argument to ``pd.concat`` to enable pass through of "
"complete blocks (:issue:`8252`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1086
msgid ""
"Added support for numpy 1.8+ data types (``bool_``, ``int_``, ``float_``,"
" ``string_``) for conversion to R dataframe  (:issue:`8400`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1093
msgid "Performance"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1095
msgid ""
"Performance improvements in ``DatetimeIndex.__iter__`` to allow faster "
"iteration (:issue:`7683`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1096
msgid ""
"Performance improvements in ``Period`` creation (and ``PeriodIndex`` "
"setitem) (:issue:`5155`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1097
msgid ""
"Improvements in Series.transform for significant performance gains "
"(revised) (:issue:`6496`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1098
msgid ""
"Performance improvements in ``StataReader`` when reading large files "
"(:issue:`8040`, :issue:`8073`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1099
msgid ""
"Performance improvements in ``StataWriter`` when writing large files "
"(:issue:`8079`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1100
msgid ""
"Performance and memory usage improvements in multi-key ``groupby`` "
"(:issue:`8128`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1101
msgid ""
"Performance improvements in groupby ``.agg`` and ``.apply`` where "
"builtins max/min were not mapped to numpy/cythonized versions "
"(:issue:`7722`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1102
msgid ""
"Performance improvement in writing to sql (``to_sql``) of up to 50% "
"(:issue:`8208`)."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1103
msgid ""
"Performance benchmarking of groupby for large value of ngroups "
"(:issue:`6787`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1104
msgid ""
"Performance improvement in ``CustomBusinessDay``, ``CustomBusinessMonth``"
" (:issue:`8236`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1105
msgid ""
"Performance improvement for ``MultiIndex.values`` for multi-level indexes"
" containing datetimes (:issue:`8543`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1112
msgid "Bug Fixes"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1114
msgid "Bug in pivot_table, when using margins and a dict aggfunc (:issue:`8349`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1115
msgid ""
"Bug in ``read_csv`` where ``squeeze=True`` would return a view "
"(:issue:`8217`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1116
msgid ""
"Bug in checking of table name in ``read_sql`` in certain cases "
"(:issue:`7826`)."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1117
msgid ""
"Bug in ``DataFrame.groupby`` where ``Grouper`` does not recognize level "
"when frequency is specified (:issue:`7885`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1118
msgid ""
"Bug in multiindexes dtypes getting mixed up when DataFrame is saved to "
"SQL table (:issue:`8021`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1119
msgid ""
"Bug in ``Series`` 0-division with a float and integer operand dtypes  "
"(:issue:`7785`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1120
msgid ""
"Bug in ``Series.astype(\"unicode\")`` not calling ``unicode`` on the "
"values correctly (:issue:`7758`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1121
msgid ""
"Bug in ``DataFrame.as_matrix()`` with mixed ``datetime64[ns]`` and "
"``timedelta64[ns]`` dtypes (:issue:`7778`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1122
msgid ""
"Bug in ``HDFStore.select_column()`` not preserving UTC timezone info when"
" selecting a ``DatetimeIndex`` (:issue:`7777`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1123
#, python-format
msgid ""
"Bug in ``to_datetime`` when ``format='%Y%m%d'`` and ``coerce=True`` are "
"specified, where previously an object array was returned (rather than a "
"coerced time-series with ``NaT``), (:issue:`7930`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1125
msgid ""
"Bug in ``DatetimeIndex`` and ``PeriodIndex`` in-place addition and "
"subtraction cause different result from normal one (:issue:`6527`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1126
msgid ""
"Bug in adding and subtracting ``PeriodIndex`` with ``PeriodIndex`` raise "
"``TypeError`` (:issue:`7741`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1127
msgid ""
"Bug in ``combine_first`` with ``PeriodIndex`` data raises ``TypeError`` "
"(:issue:`3367`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1128
msgid "Bug in MultiIndex slicing with missing indexers (:issue:`7866`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1129
msgid "Bug in MultiIndex slicing with various edge cases (:issue:`8132`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1130
msgid ""
"Regression in MultiIndex indexing with a non-scalar type object "
"(:issue:`7914`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1131
msgid ""
"Bug in ``Timestamp`` comparisons with ``==`` and ``int64`` dtype "
"(:issue:`8058`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1132
msgid ""
"Bug in pickles contains ``DateOffset`` may raise ``AttributeError`` when "
"``normalize`` attribute is referred internally (:issue:`7748`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1133
msgid ""
"Bug in ``Panel`` when using ``major_xs`` and ``copy=False`` is passed "
"(deprecation warning fails because of missing ``warnings``) "
"(:issue:`8152`)."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1134
msgid ""
"Bug in pickle deserialization that failed for pre-0.14.1 containers with "
"dup items trying to avoid ambiguity when matching block and manager "
"items, when there's only one block there's no ambiguity (:issue:`7794`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1136
msgid ""
"Bug in putting a ``PeriodIndex`` into a ``Series`` would convert to "
"``int64`` dtype, rather than ``object`` of ``Periods`` (:issue:`7932`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1137
msgid "Bug in ``HDFStore`` iteration when passing a where (:issue:`8014`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1138
msgid ""
"Bug in ``DataFrameGroupby.transform`` when transforming with a passed "
"non-sorted key (:issue:`8046`, :issue:`8430`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1139
msgid ""
"Bug in repeated timeseries line and area plot may result in "
"``ValueError`` or incorrect kind (:issue:`7733`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1140
msgid ""
"Bug in inference in a ``MultiIndex`` with ``datetime.date`` inputs "
"(:issue:`7888`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1141
msgid ""
"Bug in ``get`` where an ``IndexError`` would not cause the default value "
"to be returned (:issue:`7725`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1142
msgid ""
"Bug in ``offsets.apply``, ``rollforward`` and ``rollback`` may reset "
"nanosecond (:issue:`7697`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1143
msgid ""
"Bug in ``offsets.apply``, ``rollforward`` and ``rollback`` may raise "
"``AttributeError`` if ``Timestamp`` has ``dateutil`` tzinfo "
"(:issue:`7697`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1144
msgid "Bug in sorting a MultiIndex frame with a ``Float64Index`` (:issue:`8017`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1145
msgid ""
"Bug in inconsistent panel setitem with a rhs of a ``DataFrame`` for "
"alignment (:issue:`7763`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1146
msgid ""
"Bug in ``is_superperiod`` and ``is_subperiod`` cannot handle higher "
"frequencies than ``S`` (:issue:`7760`, :issue:`7772`, :issue:`7803`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1147
msgid "Bug in 32-bit platforms with ``Series.shift`` (:issue:`8129`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1148
msgid "Bug in ``PeriodIndex.unique`` returns int64 ``np.ndarray`` (:issue:`7540`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1149
msgid ""
"Bug in ``groupby.apply`` with a non-affecting mutation in the function "
"(:issue:`8467`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1150
msgid ""
"Bug in ``DataFrame.reset_index`` which has ``MultiIndex`` contains "
"``PeriodIndex`` or ``DatetimeIndex`` with tz raises ``ValueError`` "
"(:issue:`7746`, :issue:`7793`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1151
msgid ""
"Bug in ``DataFrame.plot`` with ``subplots=True`` may draw unnecessary "
"minor xticks and yticks (:issue:`7801`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1152
msgid ""
"Bug in ``StataReader`` which did not read variable labels in 117 files "
"due to difference between Stata documentation and implementation "
"(:issue:`7816`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1153
msgid ""
"Bug in ``StataReader`` where strings were always converted to 244 "
"characters-fixed width irrespective of underlying string size "
"(:issue:`7858`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1154
msgid ""
"Bug in ``DataFrame.plot`` and ``Series.plot`` may ignore ``rot`` and "
"``fontsize`` keywords (:issue:`7844`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1155
msgid "Bug in ``DatetimeIndex.value_counts`` doesn't preserve tz  (:issue:`7735`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1156
msgid ""
"Bug in ``PeriodIndex.value_counts`` results in ``Int64Index`` "
"(:issue:`7735`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1157
msgid ""
"Bug in ``DataFrame.join`` when doing left join on index and there are "
"multiple matches (:issue:`5391`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1158
msgid ""
"Bug in ``GroupBy.transform()`` where int groups with a transform that "
"didn't preserve the index were incorrectly truncated (:issue:`7972`)."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1160
msgid ""
"Bug in ``groupby`` where callable objects without name attributes would "
"take the wrong path, and produce a ``DataFrame`` instead of a ``Series`` "
"(:issue:`7929`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1162
msgid ""
"Bug in ``groupby`` error message when a DataFrame grouping column is "
"duplicated (:issue:`7511`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1163
msgid ""
"Bug in ``read_html`` where the ``infer_types`` argument forced coercion "
"of date-likes incorrectly (:issue:`7762`, :issue:`7032`)."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1165
msgid ""
"Bug in ``Series.str.cat`` with an index which was filtered as to not "
"include the first item (:issue:`7857`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1166
msgid ""
"Bug in ``Timestamp`` cannot parse ``nanosecond`` from string "
"(:issue:`7878`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1167
msgid ""
"Bug in ``Timestamp`` with string offset and ``tz`` results incorrect "
"(:issue:`7833`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1168
msgid ""
"Bug in ``tslib.tz_convert`` and ``tslib.tz_convert_single`` may return "
"different results (:issue:`7798`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1169
msgid ""
"Bug in ``DatetimeIndex.intersection`` of non-overlapping timestamps with "
"tz raises ``IndexError`` (:issue:`7880`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1170
msgid "Bug in alignment with TimeOps and non-unique indexes (:issue:`8363`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1171
msgid ""
"Bug in ``GroupBy.filter()`` where fast path vs. slow path made the filter"
" return a non scalar value that appeared valid but wasn't "
"(:issue:`7870`)."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1173
msgid ""
"Bug in ``date_range()``/``DatetimeIndex()`` when the timezone was "
"inferred from input dates yet incorrect times were returned when crossing"
" DST boundaries (:issue:`7835`, :issue:`7901`)."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1175
msgid ""
"Bug in ``to_excel()`` where a negative sign was being prepended to "
"positive infinity and was absent for negative infinity (:issue:`7949`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1176
msgid ""
"Bug in area plot draws legend with incorrect ``alpha`` when "
"``stacked=True`` (:issue:`8027`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1177
msgid ""
"``Period`` and ``PeriodIndex`` addition/subtraction with "
"``np.timedelta64`` results in incorrect internal representations "
"(:issue:`7740`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1178
msgid "Bug in ``Holiday`` with no offset or observance (:issue:`7987`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1179
msgid ""
"Bug in ``DataFrame.to_latex`` formatting when columns or index is a "
"``MultiIndex`` (:issue:`7982`)."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1180
msgid ""
"Bug in ``DateOffset`` around Daylight Savings Time produces unexpected "
"results (:issue:`5175`)."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1181
msgid ""
"Bug in ``DataFrame.shift`` where empty columns would throw "
"``ZeroDivisionError`` on numpy 1.7 (:issue:`8019`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1182
msgid ""
"Bug in installation where ``html_encoding/*.html`` wasn't installed and "
"therefore some tests were not running correctly (:issue:`7927`)."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1184
msgid ""
"Bug in ``read_html`` where ``bytes`` objects were not tested for in "
"``_read`` (:issue:`7927`)."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1186
msgid ""
"Bug in ``DataFrame.stack()`` when one of the column levels was a datelike"
" (:issue:`8039`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1187
msgid "Bug in broadcasting numpy scalars with ``DataFrame`` (:issue:`8116`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1188
msgid ""
"Bug in ``pivot_table`` performed with nameless ``index`` and ``columns`` "
"raises ``KeyError`` (:issue:`8103`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1189
msgid ""
"Bug in ``DataFrame.plot(kind='scatter')`` draws points and errorbars with"
" different colors when the color is specified by ``c`` keyword "
"(:issue:`8081`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1190
msgid ""
"Bug in ``Float64Index`` where ``iat`` and ``at`` were not testing and "
"were failing (:issue:`8092`)."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1192
msgid ""
"Bug in ``DataFrame.boxplot()`` where y-limits were not set correctly when"
" producing multiple axes (:issue:`7528`, :issue:`5517`)."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1194
msgid ""
"Bug in ``read_csv`` where line comments were not handled correctly given "
"a custom line terminator or ``delim_whitespace=True`` (:issue:`8122`)."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1196
msgid ""
"Bug in ``read_html`` where empty tables caused a ``StopIteration`` "
"(:issue:`7575`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1197
msgid "Bug in casting when setting a column in a same-dtype block (:issue:`7704`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1198
msgid ""
"Bug in accessing groups from a ``GroupBy`` when the original grouper was "
"a tuple (:issue:`8121`)."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1200
msgid ""
"Bug in ``.at`` that would accept integer indexers on a non-integer index "
"and do fallback (:issue:`7814`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1201
msgid "Bug with kde plot and NaNs (:issue:`8182`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1202
msgid ""
"Bug in ``GroupBy.count`` with float32 data type were nan values were not "
"excluded (:issue:`8169`)."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1203
msgid "Bug with stacked barplots and NaNs (:issue:`8175`)."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1204
msgid ""
"Bug in resample with non evenly divisible offsets (e.g. '7s') "
"(:issue:`8371`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1205 ../../whatsnew/v0.15.0.rst:1212
msgid ""
"Bug in interpolation methods with the ``limit`` keyword when no values "
"needed interpolating (:issue:`7173`)."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1206 ../../whatsnew/v0.15.0.rst:1213
msgid ""
"Bug where ``col_space`` was ignored in ``DataFrame.to_string()`` when "
"``header=False`` (:issue:`8230`)."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1207
msgid ""
"Bug with ``DatetimeIndex.asof`` incorrectly matching partial strings and "
"returning the wrong date (:issue:`8245`)."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1208
msgid ""
"Bug in plotting methods modifying the global matplotlib rcParams "
"(:issue:`8242`)."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1209
msgid ""
"Bug in ``DataFrame.__setitem__`` that caused errors when setting a "
"dataframe column to a sparse array (:issue:`8131`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1210
msgid ""
"Bug where ``Dataframe.boxplot()`` failed when entire column was empty "
"(:issue:`8181`)."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1211
msgid "Bug with messed variables in ``radviz`` visualization (:issue:`8199`)."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1214
msgid "Bug in ``to_clipboard`` that would clip long column data (:issue:`8305`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1215
msgid ""
"Bug in ``DataFrame`` terminal display: Setting max_column/max_rows to "
"zero did not trigger auto-resizing of dfs to fit terminal width/height "
"(:issue:`7180`)."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1216
msgid ""
"Bug in OLS where running with \"cluster\" and \"nw_lags\" parameters did "
"not work correctly, but also did not throw an error (:issue:`5884`)."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1218
msgid ""
"Bug in ``DataFrame.dropna`` that interpreted non-existent columns in the "
"subset argument as the 'last column' (:issue:`8303`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1219
msgid ""
"Bug in ``Index.intersection`` on non-monotonic non-unique indexes "
"(:issue:`8362`)."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1220
msgid ""
"Bug in masked series assignment where mismatching types would break "
"alignment (:issue:`8387`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1221
msgid ""
"Bug in ``NDFrame.equals`` gives false negatives with dtype=object "
"(:issue:`8437`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1222
msgid ""
"Bug in assignment with indexer where type diversity would break alignment"
" (:issue:`8258`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1223
msgid ""
"Bug in ``NDFrame.loc`` indexing when row/column names were lost when "
"target was a list/ndarray (:issue:`6552`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1224
msgid ""
"Regression in ``NDFrame.loc`` indexing when rows/columns were converted "
"to Float64Index if target was an empty list/ndarray (:issue:`7774`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1225
msgid ""
"Bug in ``Series`` that allows it to be indexed by a ``DataFrame`` which "
"has unexpected results.  Such indexing is no longer permitted "
"(:issue:`8444`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1226
msgid ""
"Bug in item assignment of a ``DataFrame`` with MultiIndex columns where "
"right-hand-side columns were not aligned (:issue:`7655`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1227
msgid ""
"Suppress FutureWarning generated by NumPy when comparing object arrays "
"containing NaN for equality (:issue:`7065`)"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1228
msgid ""
"Bug in ``DataFrame.eval()`` where the dtype of the ``not`` operator "
"(``~``) was not correctly inferred as ``bool``."
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1235
msgid "Contributors"
msgstr ""

#: ../../whatsnew/v0.15.0.rst:1237
msgid ""
"A total of 80 people contributed patches to this release.  People with a "
"\"+\" by their names contributed a patch for the first time."
msgstr ""

