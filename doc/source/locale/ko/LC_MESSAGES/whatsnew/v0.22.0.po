# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2014, the pandas development team
# This file is distributed under the same license as the pandas package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pandas 0.24.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-04-11 11:49+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../whatsnew/v0.22.0.rst:4
msgid "v0.22.0 (December 29, 2017)"
msgstr ""

#: ../../whatsnew/v0.22.0.rst:6
msgid "{{ header }}"
msgstr ""

#: ../../whatsnew/v0.22.0.rst:14
msgid ""
"This is a major release from 0.21.1 and includes a single, API-breaking "
"change. We recommend that all users upgrade to this version after "
"carefully reading the release note (singular!)."
msgstr ""

#: ../../whatsnew/v0.22.0.rst:21
msgid "Backwards incompatible API changes"
msgstr ""

#: ../../whatsnew/v0.22.0.rst:23
msgid ""
"Pandas 0.22.0 changes the handling of empty and all-*NA* sums and "
"products. The summary is that"
msgstr ""

#: ../../whatsnew/v0.22.0.rst:26
msgid "The sum of an empty or all-*NA* ``Series`` is now ``0``"
msgstr ""

#: ../../whatsnew/v0.22.0.rst:27
msgid "The product of an empty or all-*NA* ``Series`` is now ``1``"
msgstr ""

#: ../../whatsnew/v0.22.0.rst:28
msgid ""
"We've added a ``min_count`` parameter to ``.sum()`` and ``.prod()`` "
"controlling the minimum number of valid values for the result to be "
"valid. If fewer than ``min_count`` non-*NA* values are present, the "
"result is *NA*. The default is ``0``. To return ``NaN``, the 0.21 "
"behavior, use ``min_count=1``."
msgstr ""

#: ../../whatsnew/v0.22.0.rst:33
msgid ""
"Some background: In pandas 0.21, we fixed a long-standing inconsistency "
"in the return value of all-*NA* series depending on whether or not "
"bottleneck was installed. See "
":ref:`whatsnew_0210.api_breaking.bottleneck`. At the same time, we "
"changed the sum and prod of an empty ``Series`` to also be ``NaN``."
msgstr ""

#: ../../whatsnew/v0.22.0.rst:38
msgid "Based on feedback, we've partially reverted those changes."
msgstr ""

#: ../../whatsnew/v0.22.0.rst:41
msgid "Arithmetic Operations"
msgstr ""

#: ../../whatsnew/v0.22.0.rst:43
msgid "The default sum for empty or all-*NA* ``Series`` is now ``0``."
msgstr ""

#: ../../whatsnew/v0.22.0.rst:45 ../../whatsnew/v0.22.0.rst:103
#: ../../whatsnew/v0.22.0.rst:135 ../../whatsnew/v0.22.0.rst:173
msgid "*pandas 0.21.x*"
msgstr ""

#: ../../whatsnew/v0.22.0.rst:55 ../../whatsnew/v0.22.0.rst:155
#: ../../whatsnew/v0.22.0.rst:186 ../../whatsnew/v0.22.0.rst:220
msgid "*pandas 0.22.0*"
msgstr ""

#: ../../whatsnew/v0.22.0.rst:62
msgid ""
"The default behavior is the same as pandas 0.20.3 with bottleneck "
"installed. It also matches the behavior of NumPy's ``np.nansum`` on empty"
" and all-*NA* arrays."
msgstr ""

#: ../../whatsnew/v0.22.0.rst:65
msgid ""
"To have the sum of an empty series return ``NaN`` (the default behavior "
"of pandas 0.20.3 without bottleneck, or pandas 0.21.x), use the "
"``min_count`` keyword."
msgstr ""

#: ../../whatsnew/v0.22.0.rst:73
msgid ""
"Thanks to the ``skipna`` parameter, the ``.sum`` on an all-*NA* series is"
" conceptually the same as the ``.sum`` of an empty one with "
"``skipna=True`` (the default)."
msgstr ""

#: ../../whatsnew/v0.22.0.rst:81
msgid ""
"The ``min_count`` parameter refers to the minimum number of *non-null* "
"values required for a non-NA sum or product."
msgstr ""

#: ../../whatsnew/v0.22.0.rst:84
msgid ""
":meth:`Series.prod` has been updated to behave the same as "
":meth:`Series.sum`, returning ``1`` instead."
msgstr ""

#: ../../whatsnew/v0.22.0.rst:93
msgid ""
"These changes affect :meth:`DataFrame.sum` and :meth:`DataFrame.prod` as "
"well. Finally, a few less obvious places in pandas are affected by this "
"change."
msgstr ""

#: ../../whatsnew/v0.22.0.rst:97
msgid "Grouping by a Categorical"
msgstr ""

#: ../../whatsnew/v0.22.0.rst:99
msgid ""
"Grouping by a ``Categorical`` and summing now returns ``0`` instead of "
"``NaN`` for categories with no observations. The product now returns "
"``1`` instead of ``NaN``."
msgstr ""

#: ../../whatsnew/v0.22.0.rst:115
msgid "*pandas 0.22*"
msgstr ""

#: ../../whatsnew/v0.22.0.rst:122
msgid ""
"To restore the 0.21 behavior of returning ``NaN`` for unobserved groups, "
"use ``min_count>=1``."
msgstr ""

#: ../../whatsnew/v0.22.0.rst:130
msgid "Resample"
msgstr ""

#: ../../whatsnew/v0.22.0.rst:132
msgid ""
"The sum and product of all-*NA* bins has changed from ``NaN`` to ``0`` "
"for sum and ``1`` for product."
msgstr ""

#: ../../whatsnew/v0.22.0.rst:163
msgid "To restore the 0.21 behavior of returning ``NaN``, use ``min_count>=1``."
msgstr ""

#: ../../whatsnew/v0.22.0.rst:169
msgid ""
"In particular, upsampling and taking the sum or product is affected, as "
"upsampling introduces missing values even if the original series was "
"entirely valid."
msgstr ""

#: ../../whatsnew/v0.22.0.rst:193
msgid ""
"Once again, the ``min_count`` keyword is available to restore the 0.21 "
"behavior."
msgstr ""

#: ../../whatsnew/v0.22.0.rst:200
msgid "Rolling and Expanding"
msgstr ""

#: ../../whatsnew/v0.22.0.rst:202
msgid ""
"Rolling and expanding already have a ``min_periods`` keyword that behaves"
" similar to ``min_count``. The only case that changes is when doing a "
"rolling or expanding sum with ``min_periods=0``. Previously this returned"
" ``NaN``, when fewer than ``min_periods`` non-*NA* values were in the "
"window. Now it returns ``0``."
msgstr ""

#: ../../whatsnew/v0.22.0.rst:208
msgid "*pandas 0.21.1*"
msgstr ""

#: ../../whatsnew/v0.22.0.rst:227
msgid ""
"The default behavior of ``min_periods=None``, implying that "
"``min_periods`` equals the window size, is unchanged."
msgstr ""

#: ../../whatsnew/v0.22.0.rst:231
msgid "Compatibility"
msgstr ""

#: ../../whatsnew/v0.22.0.rst:233
msgid ""
"If you maintain a library that should work across pandas versions, it may"
" be easiest to exclude pandas 0.21 from your requirements. Otherwise, all"
" your ``sum()`` calls would need to check if the ``Series`` is empty "
"before summing."
msgstr ""

#: ../../whatsnew/v0.22.0.rst:237
msgid "With setuptools, in your ``setup.py`` use::"
msgstr ""

#: ../../whatsnew/v0.22.0.rst:241
msgid "With conda, use"
msgstr ""

#: ../../whatsnew/v0.22.0.rst:249
msgid ""
"Note that the inconsistency in the return value for all-*NA* series is "
"still there for pandas 0.20.3 and earlier. Avoiding pandas 0.21 will only"
" help with the empty case."
msgstr ""

#: ../../whatsnew/v0.22.0.rst:257
msgid "Contributors"
msgstr ""

#: ../../whatsnew/v0.22.0.rst:259
msgid ""
"A total of 1 people contributed patches to this release.  People with a "
"\"+\" by their names contributed a patch for the first time."
msgstr ""

