# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2014, the pandas development team
# This file is distributed under the same license as the pandas package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pandas 0.24.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-04-11 11:49+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../reference/api/pandas.DataFrame.values.rst:2
msgid "pandas.DataFrame.values"
msgstr ""

#: of pandas.DataFrame.values:2
msgid "Return a Numpy representation of the DataFrame."
msgstr ""

#: of pandas.DataFrame.values:6
msgid "We recommend using :meth:`DataFrame.to_numpy` instead."
msgstr ""

#: of pandas.DataFrame.values:8
msgid ""
"Only the values in the DataFrame will be returned, the axes labels will "
"be removed."
msgstr ""

#: of pandas.DataFrame.values
msgid "Returns"
msgstr ""

#: of pandas.DataFrame.values:20
msgid "**numpy.ndarray**"
msgstr ""

#: of pandas.DataFrame.values:15
msgid "The values of the DataFrame."
msgstr ""

#: of pandas.DataFrame.values:26
msgid ":obj:`DataFrame.to_numpy`"
msgstr ""

#: of pandas.DataFrame.values:26
msgid "Recommended alternative to this method."
msgstr ""

#: of pandas.DataFrame.values:29
msgid ":obj:`pandas.DataFrame.index`"
msgstr ""

#: of pandas.DataFrame.values:29
msgid "Retrieve the index labels."
msgstr ""

#: of pandas.DataFrame.values:31
msgid ":obj:`pandas.DataFrame.columns`"
msgstr ""

#: of pandas.DataFrame.values:32
msgid "Retrieving the column names."
msgstr ""

#: of pandas.DataFrame.values:35
msgid "Notes"
msgstr ""

#: of pandas.DataFrame.values:36
msgid ""
"The dtype will be a lower-common-denominator dtype (implicit upcasting); "
"that is to say if the dtypes (even of numeric types) are mixed, the one "
"that accommodates all will be chosen. Use this with care if you are not "
"dealing with the blocks."
msgstr ""

#: of pandas.DataFrame.values:41
msgid ""
"e.g. If the dtypes are float16 and float32, dtype will be upcast to "
"float32.  If dtypes are int32 and uint8, dtype will be upcast to int32. "
"By :func:`numpy.find_common_type` convention, mixing int64 and uint64 "
"will result in a float64 dtype."
msgstr ""

#: of pandas.DataFrame.values:48
msgid "Examples"
msgstr ""

#: of pandas.DataFrame.values:49
msgid ""
"A DataFrame where all columns are the same type (e.g., int64) results in "
"an array of the same type."
msgstr ""

#: of pandas.DataFrame.values:68
msgid ""
"A DataFrame with mixed type columns(e.g., str/object, int64, float32) "
"results in an ndarray of the broadest type that accommodates these mixed "
"types (e.g., object)."
msgstr ""

