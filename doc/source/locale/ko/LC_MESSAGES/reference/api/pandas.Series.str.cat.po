# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2014, the pandas development team
# This file is distributed under the same license as the pandas package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pandas 0.24.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-04-11 11:49+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../reference/api/pandas.Series.str.cat.rst:2
msgid "pandas.Series.str.cat"
msgstr ""

#: of pandas.Series.str.cat:2
msgid "Concatenate strings in the Series/Index with given separator."
msgstr ""

#: of pandas.Series.str.cat:4
msgid ""
"If `others` is specified, this function concatenates the Series/Index and"
" elements of `others` element-wise. If `others` is not passed, then all "
"values in the Series/Index are concatenated into a single string with a "
"given `sep`."
msgstr ""

#: of pandas.Series.str.cat
msgid "Parameters"
msgstr ""

#: of pandas.Series.str.cat:22
msgid "**others**"
msgstr ""

#: of pandas.Series.str.cat:21
msgid "Series, Index, DataFrame, np.ndarrary or list-like"
msgstr ""

#: of pandas.Series.str.cat:12
msgid ""
"Series, Index, DataFrame, np.ndarray (one- or two-dimensional) and other "
"list-likes of strings must have the same length as the calling "
"Series/Index, with the exception of indexed objects (i.e. "
"Series/Index/DataFrame) if `join` is not None."
msgstr ""

#: of pandas.Series.str.cat:17
msgid ""
"If others is a list-like that contains a combination of Series, Index or "
"np.ndarray (1-dim), then all elements will be unpacked and must satisfy "
"the above criteria individually."
msgstr ""

#: of pandas.Series.str.cat:21
msgid ""
"If others is None, the method returns the concatenation of all strings in"
" the calling Series/Index."
msgstr ""

#: of pandas.Series.str.cat:26
msgid "**sep**"
msgstr ""

#: of pandas.Series.str.cat:25
msgid "str, default ''"
msgstr ""

#: of pandas.Series.str.cat:25
msgid ""
"The separator between the different elements/columns. By default the "
"empty string `''` is used."
msgstr ""

#: of pandas.Series.str.cat:35
msgid "**na_rep**"
msgstr ""

#: of pandas.Series.str.cat:34
msgid "str or None, default None"
msgstr ""

#: of pandas.Series.str.cat:29
msgid "Representation that is inserted for all missing values:"
msgstr ""

#: of pandas.Series.str.cat:31
msgid ""
"If `na_rep` is None, and `others` is None, missing values in the "
"Series/Index are omitted from the result."
msgstr ""

#: of pandas.Series.str.cat:33
msgid ""
"If `na_rep` is None, and `others` is not None, a row containing a missing"
" value in any of the columns (before concatenation) will have a missing "
"value in the result."
msgstr ""

#: of pandas.Series.str.cat:46
msgid "**join**"
msgstr ""

#: of pandas.Series.str.cat:45
msgid "{'left', 'right', 'outer', 'inner'}, default None"
msgstr ""

#: of pandas.Series.str.cat:38
msgid ""
"Determines the join-style between the calling Series/Index and any "
"Series/Index/DataFrame in `others` (objects without an index need to "
"match the length of the calling Series/Index). If None, alignment is "
"disabled, but this option will be removed in a future version of pandas "
"and replaced with a default of `'left'`. To disable alignment, use "
"`.values` on any Series/Index/DataFrame in `others`."
msgstr ""

#: of pandas.Series.str.cat
msgid "Returns"
msgstr ""

#: of pandas.Series.str.cat:57
msgid "**concat**"
msgstr ""

#: of pandas.Series.str.cat:56
msgid "str or Series/Index of objects"
msgstr ""

#: of pandas.Series.str.cat:51
msgid ""
"If `others` is None, `str` is returned, otherwise a `Series/Index` (same "
"type as caller) of objects is returned."
msgstr ""

#: of pandas.Series.str.cat:63
msgid ":obj:`split`"
msgstr ""

#: of pandas.Series.str.cat:63
msgid "Split each string in the Series/Index."
msgstr ""

#: of pandas.Series.str.cat:65
msgid ":obj:`join`"
msgstr ""

#: of pandas.Series.str.cat:66
msgid "Join lists contained as elements in the Series/Index."
msgstr ""

#: of pandas.Series.str.cat:71
msgid "Examples"
msgstr ""

#: of pandas.Series.str.cat:72
msgid ""
"When not passing `others`, all values are concatenated into a single "
"string:"
msgstr ""

#: of pandas.Series.str.cat:79
msgid ""
"By default, NA values in the Series are ignored. Using `na_rep`, they can"
" be given a representation:"
msgstr ""

#: of pandas.Series.str.cat:85
msgid ""
"If `others` is specified, corresponding values are concatenated with the "
"separator. Result will be a Series of strings."
msgstr ""

#: of pandas.Series.str.cat:95
msgid ""
"Missing values will remain missing in the result, but can again be "
"represented using `na_rep`"
msgstr ""

#: of pandas.Series.str.cat:105
msgid "If `sep` is not specified, the values are concatenated without separation."
msgstr ""

#: of pandas.Series.str.cat:115
msgid ""
"Series with different indexes can be aligned before concatenation. The "
"`join`-keyword works as in other methods."
msgstr ""

#: of pandas.Series.str.cat:147
msgid "For more examples, see :ref:`here <text.concatenate>`."
msgstr ""

