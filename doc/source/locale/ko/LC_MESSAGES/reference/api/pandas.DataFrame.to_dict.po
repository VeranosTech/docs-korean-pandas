# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2014, the pandas development team
# This file is distributed under the same license as the pandas package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pandas 0.24.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-04-11 11:49+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../reference/api/pandas.DataFrame.to_dict.rst:2
msgid "pandas.DataFrame.to\\_dict"
msgstr ""

#: of pandas.DataFrame.to_dict:2
msgid "Convert the DataFrame to a dictionary."
msgstr ""

#: of pandas.DataFrame.to_dict:4
msgid ""
"The type of the key-value pairs can be customized with the parameters "
"(see below)."
msgstr ""

#: of pandas.DataFrame.to_dict
msgid "Parameters"
msgstr ""

#: of pandas.DataFrame.to_dict:22
msgid "**orient**"
msgstr ""

#: of pandas.DataFrame.to_dict:21
msgid "str {'dict', 'list', 'series', 'split', 'records', 'index'}"
msgstr ""

#: of pandas.DataFrame.to_dict:10
msgid "Determines the type of the values of the dictionary."
msgstr ""

#: of pandas.DataFrame.to_dict:12
msgid "'dict' (default) : dict like {column -> {index -> value}}"
msgstr ""

#: of pandas.DataFrame.to_dict:13
msgid "'list' : dict like {column -> [values]}"
msgstr ""

#: of pandas.DataFrame.to_dict:14
msgid "'series' : dict like {column -> Series(values)}"
msgstr ""

#: of pandas.DataFrame.to_dict:15
msgid ""
"'split' : dict like {'index' -> [index], 'columns' -> [columns], 'data' "
"-> [values]}"
msgstr ""

#: of pandas.DataFrame.to_dict:17
msgid "'records' : list like [{column -> value}, ... , {column -> value}]"
msgstr ""

#: of pandas.DataFrame.to_dict:19
msgid "'index' : dict like {index -> {column -> value}}"
msgstr ""

#: of pandas.DataFrame.to_dict:21
msgid ""
"Abbreviations are allowed. `s` indicates `series` and `sp` indicates "
"`split`."
msgstr ""

#: of pandas.DataFrame.to_dict:30
msgid "**into**"
msgstr ""

#: of pandas.DataFrame.to_dict:29
msgid "class, default dict"
msgstr ""

#: of pandas.DataFrame.to_dict:25
msgid ""
"The collections.Mapping subclass used for all Mappings in the return "
"value.  Can be the actual class or an empty instance of the mapping type "
"you want.  If you want a collections.defaultdict, you must pass it "
"initialized."
msgstr ""

#: of pandas.DataFrame.to_dict
msgid "Returns"
msgstr ""

#: of pandas.DataFrame.to_dict:41
msgid "**dict, list or collections.Mapping**"
msgstr ""

#: of pandas.DataFrame.to_dict:35
msgid ""
"Return a collections.Mapping object representing the DataFrame. The "
"resulting transformation depends on the `orient` parameter."
msgstr ""

#: of pandas.DataFrame.to_dict:47
msgid ":obj:`DataFrame.from_dict`"
msgstr ""

#: of pandas.DataFrame.to_dict:47
msgid "Create a DataFrame from a dictionary."
msgstr ""

#: of pandas.DataFrame.to_dict:49
msgid ":obj:`DataFrame.to_json`"
msgstr ""

#: of pandas.DataFrame.to_dict:50
msgid "Convert a DataFrame to JSON format."
msgstr ""

#: of pandas.DataFrame.to_dict:55
msgid "Examples"
msgstr ""

#: of pandas.DataFrame.to_dict:66
msgid "You can specify the return orientation."
msgstr ""

#: of pandas.DataFrame.to_dict:86
msgid "You can also specify the mapping type."
msgstr ""

#: of pandas.DataFrame.to_dict:93
msgid "If you want a `defaultdict`, you need to initialize it:"
msgstr ""

