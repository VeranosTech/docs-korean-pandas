# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2014, the pandas development team
# This file is distributed under the same license as the pandas package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pandas 0.24.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-04-11 11:49+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../reference/api/pandas.api.types.union_categoricals.rst:2
msgid "pandas.api.types.union\\_categoricals"
msgstr ""

#: of pandas.api.types.union_categoricals:2
msgid ""
"Combine list-like of Categorical-like, unioning categories. All "
"categories must have the same dtype."
msgstr ""

#: of pandas.api.types.union_categoricals
msgid "Parameters"
msgstr ""

#: of pandas.api.types.union_categoricals:10
msgid "**to_union**"
msgstr ""

#: of pandas.api.types.union_categoricals:9
msgid "list-like of Categorical, CategoricalIndex,"
msgstr ""

#: of pandas.api.types.union_categoricals:10
msgid "or Series with dtype='category'"
msgstr ""

#: of pandas.api.types.union_categoricals:14
msgid "**sort_categories**"
msgstr ""

#: of pandas.api.types.union_categoricals:13
#: pandas.api.types.union_categoricals:19
msgid "boolean, default False"
msgstr ""

#: of pandas.api.types.union_categoricals:13
msgid ""
"If true, resulting categories will be lexsorted, otherwise they will be "
"ordered as they appear in the data."
msgstr ""

#: of pandas.api.types.union_categoricals:20
msgid "**ignore_order**"
msgstr ""

#: of pandas.api.types.union_categoricals:17
msgid ""
"If true, the ordered attribute of the Categoricals will be ignored. "
"Results in an unordered categorical."
msgstr ""

#: of pandas.api.types.union_categoricals
msgid "Returns"
msgstr ""

#: of pandas.api.types.union_categoricals:27
msgid "**result**"
msgstr ""

#: of pandas.api.types.union_categoricals:26
msgid "Categorical"
msgstr ""

#: of pandas.api.types.union_categoricals
msgid "Raises"
msgstr ""

#: of pandas.api.types.union_categoricals:35
msgid "**TypeError**"
msgstr ""

#: of pandas.api.types.union_categoricals:32
msgid "all inputs do not have the same dtype"
msgstr ""

#: of pandas.api.types.union_categoricals:33
msgid "all inputs do not have the same ordered property"
msgstr ""

#: of pandas.api.types.union_categoricals:34
msgid "all inputs are ordered and their categories are not identical"
msgstr ""

#: of pandas.api.types.union_categoricals:35
msgid "sort_categories=True and Categoricals are ordered"
msgstr ""

#: of pandas.api.types.union_categoricals:41
msgid "**ValueError**"
msgstr ""

#: of pandas.api.types.union_categoricals:38
msgid "Empty list of categoricals passed"
msgstr ""

#: of pandas.api.types.union_categoricals:44
msgid "Notes"
msgstr ""

#: of pandas.api.types.union_categoricals:45
msgid ""
"To learn more about categories, see `link <http://pandas.pydata.org"
"/pandas-docs/stable/categorical.html#unioning>`__"
msgstr ""

#: of pandas.api.types.union_categoricals:50
msgid "Examples"
msgstr ""

#: of pandas.api.types.union_categoricals:53
msgid ""
"If you want to combine categoricals that do not necessarily have the same"
" categories, `union_categoricals` will combine a list-like of "
"categoricals. The new categories will be the union of the categories "
"being combined."
msgstr ""

#: of pandas.api.types.union_categoricals:64
msgid ""
"By default, the resulting categories will be ordered as they appear in "
"the `categories` of the data. If you want the categories to be lexsorted,"
" use `sort_categories=True` argument."
msgstr ""

#: of pandas.api.types.union_categoricals:72
msgid ""
"`union_categoricals` also works with the case of combining two "
"categoricals of the same categories and order information (e.g. what you "
"could also `append` for)."
msgstr ""

#: of pandas.api.types.union_categoricals:82
msgid "Raises `TypeError` because the categories are ordered and not identical."
msgstr ""

#: of pandas.api.types.union_categoricals:89
msgid "New in version 0.20.0"
msgstr ""

#: of pandas.api.types.union_categoricals:91
msgid ""
"Ordered categoricals with different categories or orderings can be "
"combined by using the `ignore_ordered=True` argument."
msgstr ""

#: of pandas.api.types.union_categoricals:100
msgid ""
"`union_categoricals` also works with a `CategoricalIndex`, or `Series` "
"containing categorical data, but note that the resulting array will "
"always be a plain `Categorical`"
msgstr ""

