# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2014, the pandas development team
# This file is distributed under the same license as the pandas package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pandas 0.24.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-04-11 11:49+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../reference/api/pandas.DataFrame.to_excel.rst:2
msgid "pandas.DataFrame.to\\_excel"
msgstr ""

#: of pandas.DataFrame.to_excel:2
msgid "Write object to an Excel sheet."
msgstr ""

#: of pandas.DataFrame.to_excel:4
msgid ""
"To write a single object to an Excel .xlsx file it is only necessary to "
"specify a target file name. To write to multiple sheets it is necessary "
"to create an `ExcelWriter` object with a target file name, and specify a "
"sheet in the file to write to."
msgstr ""

#: of pandas.DataFrame.to_excel:9
msgid ""
"Multiple sheets may be written to by specifying unique `sheet_name`. With"
" all data written to the file it is necessary to save the changes. Note "
"that creating an `ExcelWriter` object with a file name that already "
"exists will result in the contents of the existing file being erased."
msgstr ""

#: of pandas.DataFrame.to_excel
msgid "Parameters"
msgstr ""

#: of pandas.DataFrame.to_excel:17
msgid "**excel_writer**"
msgstr ""

#: of pandas.DataFrame.to_excel:16
msgid "str or ExcelWriter object"
msgstr ""

#: of pandas.DataFrame.to_excel:17
msgid "File path or existing ExcelWriter."
msgstr ""

#: of pandas.DataFrame.to_excel:20
msgid "**sheet_name**"
msgstr ""

#: of pandas.DataFrame.to_excel:19
msgid "str, default 'Sheet1'"
msgstr ""

#: of pandas.DataFrame.to_excel:20
msgid "Name of sheet which will contain DataFrame."
msgstr ""

#: of pandas.DataFrame.to_excel:23
msgid "**na_rep**"
msgstr ""

#: of pandas.DataFrame.to_excel:22
msgid "str, default ''"
msgstr ""

#: of pandas.DataFrame.to_excel:23
msgid "Missing data representation."
msgstr ""

#: of pandas.DataFrame.to_excel:27
msgid "**float_format**"
msgstr ""

#: of pandas.DataFrame.to_excel:26 pandas.DataFrame.to_excel:52
#: pandas.DataFrame.to_excel:59
msgid "str, optional"
msgstr ""

#: of pandas.DataFrame.to_excel:26
#, python-format
msgid ""
"Format string for floating point numbers. For example "
"``float_format=\"%.2f\"`` will format 0.1234 to 0.12."
msgstr ""

#: of pandas.DataFrame.to_excel:30
msgid "**columns**"
msgstr ""

#: of pandas.DataFrame.to_excel:29
msgid "sequence or list of str, optional"
msgstr ""

#: of pandas.DataFrame.to_excel:30
msgid "Columns to write."
msgstr ""

#: of pandas.DataFrame.to_excel:34
msgid "**header**"
msgstr ""

#: of pandas.DataFrame.to_excel:33
msgid "bool or list of str, default True"
msgstr ""

#: of pandas.DataFrame.to_excel:33
msgid ""
"Write out the column names. If a list of string is given it is assumed to"
" be aliases for the column names."
msgstr ""

#: of pandas.DataFrame.to_excel:37
msgid "**index**"
msgstr ""

#: of pandas.DataFrame.to_excel:36 pandas.DataFrame.to_excel:55
#: pandas.DataFrame.to_excel:66
msgid "bool, default True"
msgstr ""

#: of pandas.DataFrame.to_excel:37
msgid "Write row names (index)."
msgstr ""

#: of pandas.DataFrame.to_excel:42
msgid "**index_label**"
msgstr ""

#: of pandas.DataFrame.to_excel:41
msgid "str or sequence, optional"
msgstr ""

#: of pandas.DataFrame.to_excel:40
msgid ""
"Column label for index column(s) if desired. If not specified, and "
"`header` and `index` are True, then the index names are used. A sequence "
"should be given if the DataFrame uses MultiIndex."
msgstr ""

#: of pandas.DataFrame.to_excel:45
msgid "**startrow**"
msgstr ""

#: of pandas.DataFrame.to_excel:44 pandas.DataFrame.to_excel:47
msgid "int, default 0"
msgstr ""

#: of pandas.DataFrame.to_excel:45
msgid "Upper left cell row to dump data frame."
msgstr ""

#: of pandas.DataFrame.to_excel:48
msgid "**startcol**"
msgstr ""

#: of pandas.DataFrame.to_excel:48
msgid "Upper left cell column to dump data frame."
msgstr ""

#: of pandas.DataFrame.to_excel:53
msgid "**engine**"
msgstr ""

#: of pandas.DataFrame.to_excel:51
msgid ""
"Write engine to use, 'openpyxl' or 'xlsxwriter'. You can also set this "
"via the options ``io.excel.xlsx.writer``, ``io.excel.xls.writer``, and "
"``io.excel.xlsm.writer``."
msgstr ""

#: of pandas.DataFrame.to_excel:56
msgid "**merge_cells**"
msgstr ""

#: of pandas.DataFrame.to_excel:56
msgid "Write MultiIndex and Hierarchical Rows as merged cells."
msgstr ""

#: of pandas.DataFrame.to_excel:60
msgid "**encoding**"
msgstr ""

#: of pandas.DataFrame.to_excel:59
msgid ""
"Encoding of the resulting excel file. Only necessary for xlwt, other "
"writers support unicode natively."
msgstr ""

#: of pandas.DataFrame.to_excel:64
msgid "**inf_rep**"
msgstr ""

#: of pandas.DataFrame.to_excel:63
msgid "str, default 'inf'"
msgstr ""

#: of pandas.DataFrame.to_excel:63
msgid ""
"Representation for infinity (there is no native representation for "
"infinity in Excel)."
msgstr ""

#: of pandas.DataFrame.to_excel:67
msgid "**verbose**"
msgstr ""

#: of pandas.DataFrame.to_excel:67
msgid "Display more information in the error logs."
msgstr ""

#: of pandas.DataFrame.to_excel:79
msgid "**freeze_panes**"
msgstr ""

#: of pandas.DataFrame.to_excel:78
msgid "tuple of int (length 2), optional"
msgstr ""

#: of pandas.DataFrame.to_excel:70
msgid ""
"Specifies the one-based bottommost row and rightmost column that is to be"
" frozen."
msgstr ""

#: of pandas.DataFrame.to_excel:85
msgid ":obj:`to_csv`"
msgstr ""

#: of pandas.DataFrame.to_excel:85
msgid "Write DataFrame to a comma-separated values (csv) file."
msgstr ""

#: of pandas.DataFrame.to_excel:88
msgid ":obj:`ExcelWriter`"
msgstr ""

#: of pandas.DataFrame.to_excel:88
msgid "Class for writing DataFrame objects into excel sheets."
msgstr ""

#: of pandas.DataFrame.to_excel:91
msgid ":obj:`read_excel`"
msgstr ""

#: of pandas.DataFrame.to_excel:91
msgid "Read an Excel file into a pandas DataFrame."
msgstr ""

#: of pandas.DataFrame.to_excel:93
msgid ":obj:`read_csv`"
msgstr ""

#: of pandas.DataFrame.to_excel:94
msgid "Read a comma-separated values (csv) file into DataFrame."
msgstr ""

#: of pandas.DataFrame.to_excel:97
msgid "Notes"
msgstr ""

#: of pandas.DataFrame.to_excel:98
msgid ""
"For compatibility with :meth:`~DataFrame.to_csv`, to_excel serializes "
"lists and dicts to strings before writing."
msgstr ""

#: of pandas.DataFrame.to_excel:101
msgid ""
"Once a workbook has been saved it is not possible write further data "
"without rewriting the whole workbook."
msgstr ""

#: of pandas.DataFrame.to_excel:106
msgid "Examples"
msgstr ""

#: of pandas.DataFrame.to_excel:107
msgid "Create, write to and save a workbook:"
msgstr ""

#: of pandas.DataFrame.to_excel:114
msgid "To specify the sheet name:"
msgstr ""

#: of pandas.DataFrame.to_excel:119
msgid ""
"If you wish to write to more than one sheet in the workbook, it is "
"necessary to specify an ExcelWriter object:"
msgstr ""

#: of pandas.DataFrame.to_excel:127
msgid ""
"To set the library that is used to write the Excel file, you can pass the"
" `engine` keyword (the default engine is automatically chosen depending "
"on the file extension):"
msgstr ""

