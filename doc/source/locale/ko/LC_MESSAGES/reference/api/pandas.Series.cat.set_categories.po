# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2014, the pandas development team
# This file is distributed under the same license as the pandas package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pandas 0.24.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-04-11 11:49+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../reference/api/pandas.Series.cat.set_categories.rst:2
msgid "pandas.Series.cat.set_categories"
msgstr ""

#: of pandas.Series.cat.set_categories:2
msgid "Sets the categories to the specified new_categories."
msgstr ""

#: of pandas.Series.cat.set_categories:4
msgid ""
"`new_categories` can include new categories (which will result in unused "
"categories) or remove old categories (which results in values set to "
"NaN). If `rename==True`, the categories will simple be renamed (less or "
"more items than in old categories will result in values set to NaN or in "
"unused categories respectively)."
msgstr ""

#: of pandas.Series.cat.set_categories:10
msgid ""
"This method can be used to perform more than one action of adding, "
"removing, and reordering simultaneously and is therefore faster than "
"performing the individual steps via the more specialised methods."
msgstr ""

#: of pandas.Series.cat.set_categories:14
msgid ""
"On the other hand this methods does not do checks (e.g., whether the old "
"categories are included in the new categories on a reorder), which can "
"result in surprising changes, for example when using special string "
"dtypes on python3, which does not considers a S1 string equal to a single"
" char python string."
msgstr ""

#: of pandas.Series.cat.set_categories
msgid "Parameters"
msgstr ""

#: of pandas.Series.cat.set_categories:23
msgid "**new_categories**"
msgstr ""

#: of pandas.Series.cat.set_categories:22
msgid "Index-like"
msgstr ""

#: of pandas.Series.cat.set_categories:23
msgid "The categories in new order."
msgstr ""

#: of pandas.Series.cat.set_categories:27
msgid "**ordered**"
msgstr ""

#: of pandas.Series.cat.set_categories:26
msgid "boolean, (default: False)"
msgstr ""

#: of pandas.Series.cat.set_categories:26
msgid ""
"Whether or not the categorical is treated as a ordered categorical. If "
"not given, do not change the ordered information."
msgstr ""

#: of pandas.Series.cat.set_categories:31
msgid "**rename**"
msgstr ""

#: of pandas.Series.cat.set_categories:30 pandas.Series.cat.set_categories:34
msgid "boolean (default: False)"
msgstr ""

#: of pandas.Series.cat.set_categories:30
msgid ""
"Whether or not the new_categories should be considered as a rename of the"
" old categories or as reordered categories."
msgstr ""

#: of pandas.Series.cat.set_categories:35
msgid "**inplace**"
msgstr ""

#: of pandas.Series.cat.set_categories:34
msgid ""
"Whether or not to reorder the categories inplace or return a copy of this"
" categorical with reordered categories."
msgstr ""

#: of pandas.Series.cat.set_categories
msgid "Returns"
msgstr ""

#: of pandas.Series.cat.set_categories:42
msgid "**cat**"
msgstr ""

#: of pandas.Series.cat.set_categories:41
msgid "Categorical with reordered categories or None if inplace."
msgstr ""

#: of pandas.Series.cat.set_categories
msgid "Raises"
msgstr ""

#: of pandas.Series.cat.set_categories:49
msgid "**ValueError**"
msgstr ""

#: of pandas.Series.cat.set_categories:47
msgid "If new_categories does not validate as categories"
msgstr ""

#: of pandas.Series.cat.set_categories:54
msgid ""
":obj:`rename_categories`, :obj:`reorder_categories`, "
":obj:`add_categories`, :obj:`remove_categories`, "
":obj:`remove_unused_categories`"
msgstr ""

