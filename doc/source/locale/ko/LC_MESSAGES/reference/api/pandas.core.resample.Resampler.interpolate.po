# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2014, the pandas development team
# This file is distributed under the same license as the pandas package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pandas 0.24.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-04-11 11:49+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../reference/api/pandas.core.resample.Resampler.interpolate.rst:2
msgid "pandas.core.resample.Resampler.interpolate"
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:2
msgid "Interpolate values according to different methods."
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:6
msgid ""
"Please note that only ``method='linear'`` is supported for "
"DataFrame/Series with a MultiIndex."
msgstr ""

#: of pandas.core.resample.Resampler.interpolate
msgid "Parameters"
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:39
msgid "**method**"
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:38
msgid "str, default 'linear'"
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:12
msgid "Interpolation technique to use. One of:"
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:14
msgid ""
"'linear': Ignore the index and treat the values as equally spaced. This "
"is the only method supported on MultiIndexes."
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:16
msgid ""
"'time': Works on daily and higher resolution data to interpolate given "
"length of interval."
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:18
msgid "'index', 'values': use the actual numerical values of the index."
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:19
msgid "'pad': Fill in NaNs using existing values."
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:20
msgid ""
"'nearest', 'zero', 'slinear', 'quadratic', 'cubic', 'spline', "
"'barycentric', 'polynomial': Passed to `scipy.interpolate.interp1d`. Both"
" 'polynomial' and 'spline' require that you also specify an `order` "
"(int), e.g. ``df.interpolate(method='polynomial', order=4)``. These use "
"the numerical values of the index."
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:26
msgid ""
"'krogh', 'piecewise_polynomial', 'spline', 'pchip', 'akima': Wrappers "
"around the SciPy interpolation methods of similar names. See `Notes`."
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:29
msgid ""
"'from_derivatives': Refers to `scipy.interpolate.BPoly.from_derivatives` "
"which replaces 'piecewise_polynomial' interpolation method in scipy 0.18."
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:36
msgid ""
"Added support for the 'akima' method. Added interpolate method "
"'from_derivatives' which replaces 'piecewise_polynomial' in SciPy 0.18; "
"backwards-compatible with SciPy < 0.18"
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:42
msgid "**axis**"
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:41
msgid "{0 or 'index', 1 or 'columns', None}, default None"
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:42
msgid "Axis to interpolate along."
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:46
msgid "**limit**"
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:45
msgid "int, optional"
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:45
msgid "Maximum number of consecutive NaNs to fill. Must be greater than 0."
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:49
msgid "**inplace**"
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:48
msgid "bool, default False"
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:49
msgid "Update the data in place if possible."
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:53
msgid "**limit_direction**"
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:52
msgid "{'forward', 'backward', 'both'}, default 'forward'"
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:52
msgid "If limit is specified, consecutive NaNs will be filled in this direction."
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:64
msgid "**limit_area** : {`None`, 'inside', 'outside'}, default None"
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:63
msgid "{None, 'inside', 'outside'}, default None"
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:56
msgid ""
"If limit is specified, consecutive NaNs will be filled with this "
"restriction."
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:59
msgid "``None``: No fill restriction."
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:60
msgid "'inside': Only fill NaNs surrounded by valid values (interpolate)."
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:62
msgid "'outside': Only fill NaNs outside valid values (extrapolate)."
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:67
msgid "**downcast**"
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:66
msgid "optional, 'infer' or None, defaults to None"
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:67
msgid "Downcast dtypes if possible."
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:70
msgid "**\\*\\*kwargs**"
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:70
msgid "Keyword arguments to pass on to the interpolating function."
msgstr ""

#: of pandas.core.resample.Resampler.interpolate
msgid "Returns"
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:81
msgid "**Series or DataFrame**"
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:75
msgid ""
"Returns the same object type as the caller, interpolated at some or all "
"``NaN`` values"
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:87
msgid ":obj:`fillna`"
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:87
msgid "Fill missing values using different methods."
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:90
msgid ":obj:`scipy.interpolate.Akima1DInterpolator`"
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:90
msgid "Piecewise cubic polynomials (Akima interpolator)."
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:93
msgid ":obj:`scipy.interpolate.BPoly.from_derivatives`"
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:93
msgid "Piecewise polynomial in the Bernstein basis."
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:96
msgid ":obj:`scipy.interpolate.interp1d`"
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:96
msgid "Interpolate a 1-D function."
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:99
msgid ":obj:`scipy.interpolate.KroghInterpolator`"
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:99
msgid "Interpolate polynomial (Krogh interpolator)."
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:102
msgid ":obj:`scipy.interpolate.PchipInterpolator`"
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:102
msgid "PCHIP 1-d monotonic cubic interpolation."
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:104
msgid ":obj:`scipy.interpolate.CubicSpline`"
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:105
msgid "Cubic spline data interpolator."
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:108
msgid "Notes"
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:109
msgid ""
"The 'krogh', 'piecewise_polynomial', 'spline', 'pchip' and 'akima' "
"methods are wrappers around the respective SciPy implementations of "
"similar names. These use the actual numerical values of the index. For "
"more information on their behavior, see the `SciPy documentation "
"<http://docs.scipy.org/doc/scipy/reference/interpolate.html#univariate-"
"interpolation>`__ and `SciPy tutorial "
"<http://docs.scipy.org/doc/scipy/reference/tutorial/interpolate.html>`__."
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:120
msgid "Examples"
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:121
msgid "Filling in ``NaN`` in a :class:`~pandas.Series` via linear interpolation."
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:138
msgid ""
"Filling in ``NaN`` in a Series by padding, but filling at most two "
"consecutive ``NaN`` at a time."
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:167
msgid ""
"Filling in ``NaN`` in a Series via polynomial interpolation or splines: "
"Both 'polynomial' and 'spline' methods require that you also specify an "
"``order`` (int)."
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:179
msgid ""
"Fill the DataFrame forward (that is, going down) along each column using "
"linear interpolation."
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:182
msgid ""
"Note how the last entry in column 'a' is interpolated differently, "
"because there is no entry after it to use for interpolation. Note how the"
" first entry in column 'b' remains ``NaN``, because there is no entry "
"befofe it to use for interpolation."
msgstr ""

#: of pandas.core.resample.Resampler.interpolate:205
msgid "Using polynomial interpolation."
msgstr ""

