# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2014, the pandas development team
# This file is distributed under the same license as the pandas package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pandas 0.24.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-04-11 11:49+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../reference/api/pandas.arrays.DatetimeArray.dtype.rst:2
msgid "pandas.arrays.DatetimeArray.dtype"
msgstr ""

#: of pandas.arrays.DatetimeArray.dtype:2
msgid "The dtype for the DatetimeArray."
msgstr ""

#: of pandas.arrays.DatetimeArray.dtype:6
msgid ""
"A future version of pandas will change dtype to never be a "
"``numpy.dtype``. Instead, :attr:`DatetimeArray.dtype` will always be an "
"instance of an ``ExtensionDtype`` subclass."
msgstr ""

#: of pandas.arrays.DatetimeArray.dtype
msgid "Returns"
msgstr ""

#: of pandas.arrays.DatetimeArray.dtype:29
msgid "**numpy.dtype or DatetimeTZDtype**"
msgstr ""

#: of pandas.arrays.DatetimeArray.dtype:14
msgid ""
"If the values are tz-naive, then ``np.dtype('datetime64[ns]')`` is "
"returned."
msgstr ""

#: of pandas.arrays.DatetimeArray.dtype:17
msgid "If the values are tz-aware, then the ``DatetimeTZDtype`` is returned."
msgstr ""

