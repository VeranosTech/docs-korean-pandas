# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2014, the pandas development team
# This file is distributed under the same license as the pandas package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pandas 0.24.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-04-11 11:49+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../reference/api/pandas.core.groupby.GroupBy.apply.rst:2
msgid "pandas.core.groupby.GroupBy.apply"
msgstr ""

#: of pandas.core.groupby.GroupBy.apply:2
msgid "Apply function `func`  group-wise and combine the results together."
msgstr ""

#: of pandas.core.groupby.GroupBy.apply:4
msgid ""
"The function passed to `apply` must take a dataframe as its first "
"argument and return a DataFrame, Series or scalar. `apply` will then take"
" care of combining the results back together into a single dataframe or "
"series. `apply` is therefore a highly flexible grouping method."
msgstr ""

#: of pandas.core.groupby.GroupBy.apply:10
msgid ""
"While `apply` is a very flexible method, its downside is that using it "
"can be quite a bit slower than using more specific methods like `agg` or "
"`transform`. Pandas offers a wide range of method that will be much "
"faster than using `apply` for their specific purposes, so try to use them"
" before reaching for `apply`."
msgstr ""

#: of pandas.core.groupby.GroupBy.apply
msgid "Parameters"
msgstr ""

#: of pandas.core.groupby.GroupBy.apply:21
msgid "**func**"
msgstr ""

#: of pandas.core.groupby.GroupBy.apply:20
msgid "callable"
msgstr ""

#: of pandas.core.groupby.GroupBy.apply:19
msgid ""
"A callable that takes a dataframe as its first argument, and returns a "
"dataframe, a series or a scalar. In addition the callable may take "
"positional and keyword arguments."
msgstr ""

#: of pandas.core.groupby.GroupBy.apply:24
msgid "**args, kwargs**"
msgstr ""

#: of pandas.core.groupby.GroupBy.apply:23
msgid "tuple and dict"
msgstr ""

#: of pandas.core.groupby.GroupBy.apply:24
msgid "Optional positional and keyword arguments to pass to `func`."
msgstr ""

#: of pandas.core.groupby.GroupBy.apply
msgid "Returns"
msgstr ""

#: of pandas.core.groupby.GroupBy.apply:34
msgid "**applied**"
msgstr ""

#: of pandas.core.groupby.GroupBy.apply:33
msgid "Series or DataFrame"
msgstr ""

#: of pandas.core.groupby.GroupBy.apply:40
msgid ":obj:`pipe`"
msgstr ""

#: of pandas.core.groupby.GroupBy.apply:40
msgid "Apply function to the full GroupBy object instead of to each group."
msgstr ""

#: of pandas.core.groupby.GroupBy.apply:43
msgid ":obj:`aggregate`"
msgstr ""

#: of pandas.core.groupby.GroupBy.apply:43
msgid "Apply aggregate function to the GroupBy object."
msgstr ""

#: of pandas.core.groupby.GroupBy.apply:46
msgid ":obj:`transform`"
msgstr ""

#: of pandas.core.groupby.GroupBy.apply:46
msgid "Apply function column-by-column to the GroupBy object."
msgstr ""

#: of pandas.core.groupby.GroupBy.apply:49
msgid ":obj:`Series.apply`"
msgstr ""

#: of pandas.core.groupby.GroupBy.apply:49
msgid "Apply a function to a Series."
msgstr ""

#: of pandas.core.groupby.GroupBy.apply:51
msgid ":obj:`DataFrame.apply`"
msgstr ""

#: of pandas.core.groupby.GroupBy.apply:52
msgid "Apply a function to each row or column of a DataFrame."
msgstr ""

