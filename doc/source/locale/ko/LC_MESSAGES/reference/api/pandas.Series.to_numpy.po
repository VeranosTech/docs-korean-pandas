# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2014, the pandas development team
# This file is distributed under the same license as the pandas package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pandas 0.24.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-04-11 11:49+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../reference/api/pandas.Series.to_numpy.rst:2
msgid "pandas.Series.to\\_numpy"
msgstr ""

#: of pandas.Series.to_numpy:2
msgid "A NumPy ndarray representing the values in this Series or Index."
msgstr ""

#: of pandas.Series.to_numpy
msgid "Parameters"
msgstr ""

#: of pandas.Series.to_numpy:9
msgid "**dtype**"
msgstr ""

#: of pandas.Series.to_numpy:8
msgid "str or numpy.dtype, optional"
msgstr ""

#: of pandas.Series.to_numpy:9
msgid "The dtype to pass to :meth:`numpy.asarray`"
msgstr ""

#: of pandas.Series.to_numpy:15
msgid "**copy**"
msgstr ""

#: of pandas.Series.to_numpy:14
msgid "bool, default False"
msgstr ""

#: of pandas.Series.to_numpy:12
msgid ""
"Whether to ensure that the returned value is a not a view on another "
"array. Note that ``copy=False`` does not *ensure* that ``to_numpy()`` is "
"no-copy. Rather, ``copy=True`` ensure that a copy is made, even if not "
"strictly necessary."
msgstr ""

#: of pandas.Series.to_numpy
msgid "Returns"
msgstr ""

#: of pandas.Series.to_numpy:25
msgid "**numpy.ndarray**"
msgstr ""

#: of pandas.Series.to_numpy:31
msgid ":obj:`Series.array`"
msgstr ""

#: of pandas.Series.to_numpy:31 pandas.Series.to_numpy:34
msgid "Get the actual data stored within."
msgstr ""

#: of pandas.Series.to_numpy:34
msgid ":obj:`Index.array`"
msgstr ""

#: of pandas.Series.to_numpy:36
msgid ":obj:`DataFrame.to_numpy`"
msgstr ""

#: of pandas.Series.to_numpy:37
msgid "Similar method for DataFrame."
msgstr ""

#: of pandas.Series.to_numpy:40
msgid "Notes"
msgstr ""

#: of pandas.Series.to_numpy:41
msgid ""
"The returned array will be the same up to equality (values equal in "
"`self` will be equal in the returned array; likewise for values that are "
"not equal). When `self` contains an ExtensionArray, the dtype may be "
"different. For example, for a category-dtype Series, ``to_numpy()`` will "
"return a NumPy array and the categorical dtype will be lost."
msgstr ""

#: of pandas.Series.to_numpy:48
msgid ""
"For NumPy dtypes, this will be a reference to the actual data stored in "
"this Series or Index (assuming ``copy=False``). Modifying the result in "
"place will modify the data stored in the Series or Index (not that we "
"recommend doing that)."
msgstr ""

#: of pandas.Series.to_numpy:53
msgid ""
"For extension types, ``to_numpy()`` *may* require copying data and "
"coercing the result to a NumPy type (possibly object), which may be "
"expensive. When you need a no-copy reference to the underlying data, "
":attr:`Series.array` should be used instead."
msgstr ""

#: of pandas.Series.to_numpy:58
msgid ""
"This table lays out the different dtypes and default return types of "
"``to_numpy()`` for various dtypes within pandas."
msgstr ""

#: of pandas.Series.to_numpy:62
msgid "dtype"
msgstr ""

#: of pandas.Series.to_numpy:62
msgid "array type"
msgstr ""

#: of pandas.Series.to_numpy:64
msgid "category[T]"
msgstr ""

#: of pandas.Series.to_numpy:64
msgid "ndarray[T] (same dtype as input)"
msgstr ""

#: of pandas.Series.to_numpy:65
msgid "period"
msgstr ""

#: of pandas.Series.to_numpy:65
msgid "ndarray[object] (Periods)"
msgstr ""

#: of pandas.Series.to_numpy:66
msgid "interval"
msgstr ""

#: of pandas.Series.to_numpy:66
msgid "ndarray[object] (Intervals)"
msgstr ""

#: of pandas.Series.to_numpy:67
msgid "IntegerNA"
msgstr ""

#: of pandas.Series.to_numpy:67
msgid "ndarray[object]"
msgstr ""

#: of pandas.Series.to_numpy:68
msgid "datetime64[ns]"
msgstr ""

#: of pandas.Series.to_numpy:69
msgid "datetime64[ns, tz]"
msgstr ""

#: of pandas.Series.to_numpy:69
msgid "ndarray[object] (Timestamps)"
msgstr ""

#: of pandas.Series.to_numpy:74
msgid "Examples"
msgstr ""

#: of pandas.Series.to_numpy:79
msgid ""
"Specify the `dtype` to control how datetime-aware data is represented. "
"Use ``dtype=object`` to return an ndarray of pandas :class:`Timestamp` "
"objects, each with the correct ``tz``."
msgstr ""

#: of pandas.Series.to_numpy:89
msgid ""
"Or ``dtype='datetime64[ns]'`` to return an ndarray of native datetime64 "
"values. The values are converted to UTC and the timezone info is dropped."
msgstr ""

