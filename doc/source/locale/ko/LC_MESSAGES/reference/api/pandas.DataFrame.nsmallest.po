# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2014, the pandas development team
# This file is distributed under the same license as the pandas package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pandas 0.24.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-04-11 11:49+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../reference/api/pandas.DataFrame.nsmallest.rst:2
msgid "pandas.DataFrame.nsmallest"
msgstr ""

#: of pandas.DataFrame.nsmallest:2
msgid "Return the first `n` rows ordered by `columns` in ascending order."
msgstr ""

#: of pandas.DataFrame.nsmallest:4
msgid ""
"Return the first `n` rows with the smallest values in `columns`, in "
"ascending order. The columns that are not specified are returned as well,"
" but not used for ordering."
msgstr ""

#: of pandas.DataFrame.nsmallest:8
msgid ""
"This method is equivalent to ``df.sort_values(columns, "
"ascending=True).head(n)``, but more performant."
msgstr ""

#: of pandas.DataFrame.nsmallest
msgid "Parameters"
msgstr ""

#: of pandas.DataFrame.nsmallest:15
msgid "**n**"
msgstr ""

#: of pandas.DataFrame.nsmallest:14
msgid "int"
msgstr ""

#: of pandas.DataFrame.nsmallest:15
msgid "Number of items to retrieve."
msgstr ""

#: of pandas.DataFrame.nsmallest:18
msgid "**columns**"
msgstr ""

#: of pandas.DataFrame.nsmallest:17
msgid "list or str"
msgstr ""

#: of pandas.DataFrame.nsmallest:18
msgid "Column name or names to order by."
msgstr ""

#: of pandas.DataFrame.nsmallest:28
msgid "**keep**"
msgstr ""

#: of pandas.DataFrame.nsmallest:27
msgid "{'first', 'last', 'all'}, default 'first'"
msgstr ""

#: of pandas.DataFrame.nsmallest:21
msgid "Where there are duplicate values:"
msgstr ""

#: of pandas.DataFrame.nsmallest:23
msgid "``first`` : take the first occurrence."
msgstr ""

#: of pandas.DataFrame.nsmallest:24
msgid "``last`` : take the last occurrence."
msgstr ""

#: of pandas.DataFrame.nsmallest:25
msgid ""
"``all`` : do not drop any duplicates, even it means selecting more than "
"`n` items."
msgstr ""

#: of pandas.DataFrame.nsmallest
msgid "Returns"
msgstr ""

#: of pandas.DataFrame.nsmallest:38
msgid "**DataFrame**"
msgstr ""

#: of pandas.DataFrame.nsmallest:44
msgid ":obj:`DataFrame.nlargest`"
msgstr ""

#: of pandas.DataFrame.nsmallest:44
msgid "Return the first `n` rows ordered by `columns` in descending order."
msgstr ""

#: of pandas.DataFrame.nsmallest:47
msgid ":obj:`DataFrame.sort_values`"
msgstr ""

#: of pandas.DataFrame.nsmallest:47
msgid "Sort DataFrame by the values."
msgstr ""

#: of pandas.DataFrame.nsmallest:49
msgid ":obj:`DataFrame.head`"
msgstr ""

#: of pandas.DataFrame.nsmallest:50
msgid "Return the first `n` rows without re-ordering."
msgstr ""

#: of pandas.DataFrame.nsmallest:55
msgid "Examples"
msgstr ""

#: of pandas.DataFrame.nsmallest:78
msgid ""
"In the following example, we will use ``nsmallest`` to select the three "
"rows having the smallest values in column \"a\"."
msgstr ""

#: of pandas.DataFrame.nsmallest:87
msgid "When using ``keep='last'``, ties are resolved in reverse order:"
msgstr ""

#: of pandas.DataFrame.nsmallest:95
msgid "When using ``keep='all'``, all duplicate items are maintained:"
msgstr ""

#: of pandas.DataFrame.nsmallest:103
msgid ""
"To order by the largest values in column \"a\" and then \"c\", we can "
"specify multiple columns like in the next example."
msgstr ""

