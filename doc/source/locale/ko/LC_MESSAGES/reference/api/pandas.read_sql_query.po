# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2014, the pandas development team
# This file is distributed under the same license as the pandas package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pandas 0.24.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-04-11 11:49+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../reference/api/pandas.read_sql_query.rst:2
msgid "pandas.read\\_sql\\_query"
msgstr ""

#: of pandas.read_sql_query:2
msgid "Read SQL query into a DataFrame."
msgstr ""

#: of pandas.read_sql_query:4
msgid ""
"Returns a DataFrame corresponding to the result set of the query string. "
"Optionally provide an `index_col` parameter to use one of the columns as "
"the index, otherwise default integer index will be used."
msgstr ""

#: of pandas.read_sql_query
msgid "Parameters"
msgstr ""

#: of pandas.read_sql_query:11
msgid "**sql**"
msgstr ""

#: of pandas.read_sql_query:10
msgid "string SQL query or SQLAlchemy Selectable (select or text object)"
msgstr ""

#: of pandas.read_sql_query:11
msgid "SQL query to be executed."
msgstr ""

#: of pandas.read_sql_query:17
msgid "**con**"
msgstr ""

#: of pandas.read_sql_query:16
msgid "SQLAlchemy connectable(engine/connection), database string URI,"
msgstr ""

#: of pandas.read_sql_query:14
msgid ""
"or sqlite3 DBAPI2 connection Using SQLAlchemy makes it possible to use "
"any DB supported by that library. If a DBAPI2 object, only sqlite3 is "
"supported."
msgstr ""

#: of pandas.read_sql_query:20
msgid "**index_col**"
msgstr ""

#: of pandas.read_sql_query:19
msgid "string or list of strings, optional, default: None"
msgstr ""

#: of pandas.read_sql_query:20
msgid "Column(s) to set as index(MultiIndex)."
msgstr ""

#: of pandas.read_sql_query:24
msgid "**coerce_float**"
msgstr ""

#: of pandas.read_sql_query:23
msgid "boolean, default True"
msgstr ""

#: of pandas.read_sql_query:23
msgid ""
"Attempts to convert values of non-string, non-numeric objects (like "
"decimal.Decimal) to floating point. Useful for SQL result sets."
msgstr ""

#: of pandas.read_sql_query:31
msgid "**params**"
msgstr ""

#: of pandas.read_sql_query:30
msgid "list, tuple or dict, optional, default: None"
msgstr ""

#: of pandas.read_sql_query:27
#, python-format
msgid ""
"List of parameters to pass to execute method.  The syntax used to pass "
"parameters is database driver dependent. Check your database driver "
"documentation for which of the five syntax styles, described in PEP 249's"
" paramstyle, is supported. Eg. for psycopg2, uses %(name)s so use "
"params={'name' : 'value'}"
msgstr ""

#: of pandas.read_sql_query:41
msgid "**parse_dates**"
msgstr ""

#: of pandas.read_sql_query:40
msgid "list or dict, default: None"
msgstr ""

#: of pandas.read_sql_query:34
msgid "List of column names to parse as dates."
msgstr ""

#: of pandas.read_sql_query:35
msgid ""
"Dict of ``{column_name: format string}`` where format string is strftime "
"compatible in case of parsing string times, or is one of (D, s, ns, ms, "
"us) in case of parsing integer timestamps."
msgstr ""

#: of pandas.read_sql_query:38
msgid ""
"Dict of ``{column_name: arg dict}``, where the arg dict corresponds to "
"the keyword arguments of :func:`pandas.to_datetime` Especially useful "
"with databases without native Datetime support, such as SQLite."
msgstr ""

#: of pandas.read_sql_query:45
msgid "**chunksize**"
msgstr ""

#: of pandas.read_sql_query:44
msgid "int, default None"
msgstr ""

#: of pandas.read_sql_query:44
msgid ""
"If specified, return an iterator where `chunksize` is the number of rows "
"to include in each chunk."
msgstr ""

#: of pandas.read_sql_query
msgid "Returns"
msgstr ""

#: of pandas.read_sql_query:55
msgid "**DataFrame**"
msgstr ""

#: of pandas.read_sql_query:61
msgid ":obj:`read_sql_table`"
msgstr ""

#: of pandas.read_sql_query:61
msgid "Read SQL database table into a DataFrame."
msgstr ""

#: of pandas.read_sql_query:63
msgid ":obj:`read_sql`"
msgstr ""

#: of pandas.read_sql_query:66
msgid "Notes"
msgstr ""

#: of pandas.read_sql_query:67
msgid ""
"Any datetime values with time zone information parsed via the "
"`parse_dates` parameter will be converted to UTC."
msgstr ""

