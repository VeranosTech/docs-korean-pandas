# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2014, the pandas development team
# This file is distributed under the same license as the pandas package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pandas 0.24.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-04-11 11:49+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../reference/api/pandas.Series.as_matrix.rst:2
msgid "pandas.Series.as\\_matrix"
msgstr ""

#: of pandas.Series.as_matrix:2
msgid "Convert the frame to its Numpy-array representation."
msgstr ""

#: of pandas.Series.as_matrix:4
msgid "Use :meth:`DataFrame.values` instead."
msgstr ""

#: of pandas.Series.as_matrix
msgid "Parameters"
msgstr ""

#: of pandas.Series.as_matrix:10
msgid "**columns**"
msgstr ""

#: of pandas.Series.as_matrix:9
msgid "list, optional, default:None"
msgstr ""

#: of pandas.Series.as_matrix:10
msgid "If None, return all columns, otherwise, returns specified columns."
msgstr ""

#: of pandas.Series.as_matrix
msgid "Returns"
msgstr ""

#: of pandas.Series.as_matrix:21
msgid "**values**"
msgstr ""

#: of pandas.Series.as_matrix:20
msgid "ndarray"
msgstr ""

#: of pandas.Series.as_matrix:15
msgid ""
"If the caller is heterogeneous and contains booleans or objects, the "
"result will be of dtype=object. See Notes."
msgstr ""

#: of pandas.Series.as_matrix:26
msgid ":obj:`DataFrame.values`"
msgstr ""

#: of pandas.Series.as_matrix:29
msgid "Notes"
msgstr ""

#: of pandas.Series.as_matrix:30
msgid "Return is NOT a Numpy-matrix, rather, a Numpy-array."
msgstr ""

#: of pandas.Series.as_matrix:32
msgid ""
"The dtype will be a lower-common-denominator dtype (implicit upcasting); "
"that is to say if the dtypes (even of numeric types) are mixed, the one "
"that accommodates all will be chosen. Use this with care if you are not "
"dealing with the blocks."
msgstr ""

#: of pandas.Series.as_matrix:37
msgid ""
"e.g. If the dtypes are float16 and float32, dtype will be upcast to "
"float32.  If dtypes are int32 and uint8, dtype will be upcase to int32. "
"By numpy.find_common_type convention, mixing int64 and uint64 will result"
" in a float64 dtype."
msgstr ""

#: of pandas.Series.as_matrix:42
msgid ""
"This method is provided for backwards compatibility. Generally, it is "
"recommended to use '.values'."
msgstr ""

